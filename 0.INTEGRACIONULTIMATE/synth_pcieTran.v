/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* dynports =  1  *)
(* src = "ram.v:10" *)
module \$paramod\ram\DATA_BITS=10\ADDR_BITS=3 (data_out_synt, data_in, addr_write, addr_read, write, read, clk, reset);
  (* src = "ram.v:35" *)
  wire [9:0] _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  (* src = "ram.v:15" *)
  input [2:0] addr_read;
  (* src = "ram.v:14" *)
  input [2:0] addr_write;
  (* src = "ram.v:16" *)
  input clk;
  (* src = "ram.v:13" *)
  input [9:0] data_in;
  (* src = "ram.v:12" *)
  output [9:0] data_out_synt;
  wire [9:0] \memoria[0] ;
  wire [9:0] \memoria[1] ;
  wire [9:0] \memoria[2] ;
  wire [9:0] \memoria[3] ;
  wire [9:0] \memoria[4] ;
  wire [9:0] \memoria[5] ;
  wire [9:0] \memoria[6] ;
  wire [9:0] \memoria[7] ;
  (* src = "ram.v:16" *)
  input read;
  (* src = "ram.v:16" *)
  input reset;
  (* src = "ram.v:16" *)
  input write;
  NOT _0547_ (
    .A(read),
    .Y(_0081_)
  );
  NOT _0548_ (
    .A(data_in[0]),
    .Y(_0082_)
  );
  NOT _0549_ (
    .A(write),
    .Y(_0083_)
  );
  NOT _0550_ (
    .A(data_in[1]),
    .Y(_0084_)
  );
  NOT _0551_ (
    .A(data_in[2]),
    .Y(_0085_)
  );
  NOT _0552_ (
    .A(data_in[3]),
    .Y(_0086_)
  );
  NOT _0553_ (
    .A(data_in[4]),
    .Y(_0087_)
  );
  NOT _0554_ (
    .A(data_in[5]),
    .Y(_0088_)
  );
  NOT _0555_ (
    .A(data_in[6]),
    .Y(_0089_)
  );
  NOT _0556_ (
    .A(data_in[7]),
    .Y(_0090_)
  );
  NOT _0557_ (
    .A(data_in[8]),
    .Y(_0091_)
  );
  NOT _0558_ (
    .A(data_in[9]),
    .Y(_0092_)
  );
  NOT _0559_ (
    .A(addr_write[0]),
    .Y(_0093_)
  );
  NOT _0560_ (
    .A(addr_write[1]),
    .Y(_0094_)
  );
  NOT _0561_ (
    .A(addr_read[0]),
    .Y(_0095_)
  );
  NOT _0562_ (
    .A(addr_read[1]),
    .Y(_0096_)
  );
  NOT _0563_ (
    .A(addr_read[2]),
    .Y(_0097_)
  );
  NAND _0564_ (
    .A(write),
    .B(addr_write[2]),
    .Y(_0098_)
  );
  NOT _0565_ (
    .A(_0098_),
    .Y(_0099_)
  );
  NAND _0566_ (
    .A(write),
    .B(addr_write[1]),
    .Y(_0100_)
  );
  NOR _0567_ (
    .A(_0094_),
    .B(_0098_),
    .Y(_0101_)
  );
  NAND _0568_ (
    .A(addr_write[1]),
    .B(_0099_),
    .Y(_0102_)
  );
  NOR _0569_ (
    .A(_0093_),
    .B(_0102_),
    .Y(_0103_)
  );
  NAND _0570_ (
    .A(addr_write[0]),
    .B(_0101_),
    .Y(_0104_)
  );
  NAND _0571_ (
    .A(\memoria[7] [1]),
    .B(_0104_),
    .Y(_0105_)
  );
  NOR _0572_ (
    .A(_0083_),
    .B(_0084_),
    .Y(_0106_)
  );
  NAND _0573_ (
    .A(_0103_),
    .B(_0106_),
    .Y(_0107_)
  );
  NAND _0574_ (
    .A(_0105_),
    .B(_0107_),
    .Y(_0072_)
  );
  NOR _0575_ (
    .A(_0083_),
    .B(_0085_),
    .Y(_0108_)
  );
  NAND _0576_ (
    .A(_0103_),
    .B(_0108_),
    .Y(_0109_)
  );
  NAND _0577_ (
    .A(\memoria[7] [2]),
    .B(_0104_),
    .Y(_0110_)
  );
  NAND _0578_ (
    .A(_0109_),
    .B(_0110_),
    .Y(_0073_)
  );
  NAND _0579_ (
    .A(\memoria[7] [3]),
    .B(_0104_),
    .Y(_0111_)
  );
  NOR _0580_ (
    .A(_0083_),
    .B(_0086_),
    .Y(_0112_)
  );
  NAND _0581_ (
    .A(_0103_),
    .B(_0112_),
    .Y(_0113_)
  );
  NAND _0582_ (
    .A(_0111_),
    .B(_0113_),
    .Y(_0074_)
  );
  NOR _0583_ (
    .A(_0083_),
    .B(_0087_),
    .Y(_0114_)
  );
  NAND _0584_ (
    .A(_0103_),
    .B(_0114_),
    .Y(_0115_)
  );
  NAND _0585_ (
    .A(\memoria[7] [4]),
    .B(_0104_),
    .Y(_0116_)
  );
  NAND _0586_ (
    .A(_0115_),
    .B(_0116_),
    .Y(_0075_)
  );
  NOR _0587_ (
    .A(_0083_),
    .B(_0088_),
    .Y(_0117_)
  );
  NAND _0588_ (
    .A(_0103_),
    .B(_0117_),
    .Y(_0118_)
  );
  NAND _0589_ (
    .A(\memoria[7] [5]),
    .B(_0104_),
    .Y(_0119_)
  );
  NAND _0590_ (
    .A(_0118_),
    .B(_0119_),
    .Y(_0076_)
  );
  NAND _0591_ (
    .A(\memoria[7] [6]),
    .B(_0104_),
    .Y(_0120_)
  );
  NOR _0592_ (
    .A(_0083_),
    .B(_0089_),
    .Y(_0121_)
  );
  NAND _0593_ (
    .A(_0103_),
    .B(_0121_),
    .Y(_0122_)
  );
  NAND _0594_ (
    .A(_0120_),
    .B(_0122_),
    .Y(_0077_)
  );
  NAND _0595_ (
    .A(\memoria[7] [7]),
    .B(_0104_),
    .Y(_0123_)
  );
  NOR _0596_ (
    .A(_0083_),
    .B(_0090_),
    .Y(_0124_)
  );
  NAND _0597_ (
    .A(_0103_),
    .B(_0124_),
    .Y(_0125_)
  );
  NAND _0598_ (
    .A(_0123_),
    .B(_0125_),
    .Y(_0078_)
  );
  NOR _0599_ (
    .A(_0083_),
    .B(_0091_),
    .Y(_0126_)
  );
  NAND _0600_ (
    .A(_0103_),
    .B(_0126_),
    .Y(_0127_)
  );
  NAND _0601_ (
    .A(\memoria[7] [8]),
    .B(_0104_),
    .Y(_0128_)
  );
  NAND _0602_ (
    .A(_0127_),
    .B(_0128_),
    .Y(_0079_)
  );
  NAND _0603_ (
    .A(\memoria[7] [9]),
    .B(_0104_),
    .Y(_0129_)
  );
  NOR _0604_ (
    .A(_0083_),
    .B(_0092_),
    .Y(_0130_)
  );
  NAND _0605_ (
    .A(_0103_),
    .B(_0130_),
    .Y(_0131_)
  );
  NAND _0606_ (
    .A(_0129_),
    .B(_0131_),
    .Y(_0080_)
  );
  NOR _0607_ (
    .A(addr_write[0]),
    .B(_0102_),
    .Y(_0132_)
  );
  NAND _0608_ (
    .A(_0093_),
    .B(_0101_),
    .Y(_0133_)
  );
  NOR _0609_ (
    .A(_0082_),
    .B(_0083_),
    .Y(_0134_)
  );
  NAND _0610_ (
    .A(_0132_),
    .B(_0134_),
    .Y(_0135_)
  );
  NAND _0611_ (
    .A(\memoria[6] [0]),
    .B(_0133_),
    .Y(_0136_)
  );
  NAND _0612_ (
    .A(_0135_),
    .B(_0136_),
    .Y(_0061_)
  );
  NAND _0613_ (
    .A(_0106_),
    .B(_0132_),
    .Y(_0137_)
  );
  NAND _0614_ (
    .A(\memoria[6] [1]),
    .B(_0133_),
    .Y(_0138_)
  );
  NAND _0615_ (
    .A(_0137_),
    .B(_0138_),
    .Y(_0062_)
  );
  NAND _0616_ (
    .A(_0108_),
    .B(_0132_),
    .Y(_0139_)
  );
  NAND _0617_ (
    .A(\memoria[6] [2]),
    .B(_0133_),
    .Y(_0140_)
  );
  NAND _0618_ (
    .A(_0139_),
    .B(_0140_),
    .Y(_0063_)
  );
  NAND _0619_ (
    .A(_0112_),
    .B(_0132_),
    .Y(_0141_)
  );
  NAND _0620_ (
    .A(\memoria[6] [3]),
    .B(_0133_),
    .Y(_0142_)
  );
  NAND _0621_ (
    .A(_0141_),
    .B(_0142_),
    .Y(_0064_)
  );
  NAND _0622_ (
    .A(_0114_),
    .B(_0132_),
    .Y(_0143_)
  );
  NAND _0623_ (
    .A(\memoria[6] [4]),
    .B(_0133_),
    .Y(_0144_)
  );
  NAND _0624_ (
    .A(_0143_),
    .B(_0144_),
    .Y(_0065_)
  );
  NAND _0625_ (
    .A(_0117_),
    .B(_0132_),
    .Y(_0145_)
  );
  NAND _0626_ (
    .A(\memoria[6] [5]),
    .B(_0133_),
    .Y(_0146_)
  );
  NAND _0627_ (
    .A(_0145_),
    .B(_0146_),
    .Y(_0066_)
  );
  NAND _0628_ (
    .A(_0121_),
    .B(_0132_),
    .Y(_0147_)
  );
  NAND _0629_ (
    .A(\memoria[6] [6]),
    .B(_0133_),
    .Y(_0148_)
  );
  NAND _0630_ (
    .A(_0147_),
    .B(_0148_),
    .Y(_0067_)
  );
  NAND _0631_ (
    .A(_0124_),
    .B(_0132_),
    .Y(_0149_)
  );
  NAND _0632_ (
    .A(\memoria[6] [7]),
    .B(_0133_),
    .Y(_0150_)
  );
  NAND _0633_ (
    .A(_0149_),
    .B(_0150_),
    .Y(_0068_)
  );
  NAND _0634_ (
    .A(_0126_),
    .B(_0132_),
    .Y(_0151_)
  );
  NAND _0635_ (
    .A(\memoria[6] [8]),
    .B(_0133_),
    .Y(_0152_)
  );
  NAND _0636_ (
    .A(_0151_),
    .B(_0152_),
    .Y(_0069_)
  );
  NAND _0637_ (
    .A(_0130_),
    .B(_0132_),
    .Y(_0153_)
  );
  NAND _0638_ (
    .A(\memoria[6] [9]),
    .B(_0133_),
    .Y(_0154_)
  );
  NAND _0639_ (
    .A(_0153_),
    .B(_0154_),
    .Y(_0070_)
  );
  NAND _0640_ (
    .A(write),
    .B(_0094_),
    .Y(_0155_)
  );
  NOR _0641_ (
    .A(addr_write[1]),
    .B(_0098_),
    .Y(_0156_)
  );
  NAND _0642_ (
    .A(_0094_),
    .B(_0099_),
    .Y(_0157_)
  );
  NOR _0643_ (
    .A(_0093_),
    .B(_0157_),
    .Y(_0158_)
  );
  NAND _0644_ (
    .A(addr_write[0]),
    .B(_0156_),
    .Y(_0159_)
  );
  NAND _0645_ (
    .A(_0134_),
    .B(_0158_),
    .Y(_0160_)
  );
  NAND _0646_ (
    .A(\memoria[5] [0]),
    .B(_0159_),
    .Y(_0161_)
  );
  NAND _0647_ (
    .A(_0160_),
    .B(_0161_),
    .Y(_0051_)
  );
  NAND _0648_ (
    .A(_0106_),
    .B(_0158_),
    .Y(_0162_)
  );
  NAND _0649_ (
    .A(\memoria[5] [1]),
    .B(_0159_),
    .Y(_0163_)
  );
  NAND _0650_ (
    .A(_0162_),
    .B(_0163_),
    .Y(_0052_)
  );
  NAND _0651_ (
    .A(_0108_),
    .B(_0158_),
    .Y(_0164_)
  );
  NAND _0652_ (
    .A(\memoria[5] [2]),
    .B(_0159_),
    .Y(_0165_)
  );
  NAND _0653_ (
    .A(_0164_),
    .B(_0165_),
    .Y(_0053_)
  );
  NAND _0654_ (
    .A(_0112_),
    .B(_0158_),
    .Y(_0166_)
  );
  NAND _0655_ (
    .A(\memoria[5] [3]),
    .B(_0159_),
    .Y(_0167_)
  );
  NAND _0656_ (
    .A(_0166_),
    .B(_0167_),
    .Y(_0054_)
  );
  NAND _0657_ (
    .A(_0114_),
    .B(_0158_),
    .Y(_0168_)
  );
  NAND _0658_ (
    .A(\memoria[5] [4]),
    .B(_0159_),
    .Y(_0169_)
  );
  NAND _0659_ (
    .A(_0168_),
    .B(_0169_),
    .Y(_0055_)
  );
  NAND _0660_ (
    .A(_0117_),
    .B(_0158_),
    .Y(_0170_)
  );
  NAND _0661_ (
    .A(\memoria[5] [5]),
    .B(_0159_),
    .Y(_0171_)
  );
  NAND _0662_ (
    .A(_0170_),
    .B(_0171_),
    .Y(_0056_)
  );
  NAND _0663_ (
    .A(_0121_),
    .B(_0158_),
    .Y(_0172_)
  );
  NAND _0664_ (
    .A(\memoria[5] [6]),
    .B(_0159_),
    .Y(_0173_)
  );
  NAND _0665_ (
    .A(_0172_),
    .B(_0173_),
    .Y(_0057_)
  );
  NAND _0666_ (
    .A(_0124_),
    .B(_0158_),
    .Y(_0174_)
  );
  NAND _0667_ (
    .A(\memoria[5] [7]),
    .B(_0159_),
    .Y(_0175_)
  );
  NAND _0668_ (
    .A(_0174_),
    .B(_0175_),
    .Y(_0058_)
  );
  NAND _0669_ (
    .A(_0126_),
    .B(_0158_),
    .Y(_0176_)
  );
  NAND _0670_ (
    .A(\memoria[5] [8]),
    .B(_0159_),
    .Y(_0177_)
  );
  NAND _0671_ (
    .A(_0176_),
    .B(_0177_),
    .Y(_0059_)
  );
  NAND _0672_ (
    .A(_0130_),
    .B(_0158_),
    .Y(_0178_)
  );
  NAND _0673_ (
    .A(\memoria[5] [9]),
    .B(_0159_),
    .Y(_0179_)
  );
  NAND _0674_ (
    .A(_0178_),
    .B(_0179_),
    .Y(_0060_)
  );
  NOR _0675_ (
    .A(\memoria[7] [0]),
    .B(_0095_),
    .Y(_0180_)
  );
  NOR _0676_ (
    .A(\memoria[6] [0]),
    .B(addr_read[0]),
    .Y(_0181_)
  );
  NOR _0677_ (
    .A(_0180_),
    .B(_0181_),
    .Y(_0182_)
  );
  NOR _0678_ (
    .A(_0096_),
    .B(_0182_),
    .Y(_0183_)
  );
  NOR _0679_ (
    .A(\memoria[5] [0]),
    .B(_0095_),
    .Y(_0184_)
  );
  NOR _0680_ (
    .A(\memoria[4] [0]),
    .B(addr_read[0]),
    .Y(_0185_)
  );
  NOR _0681_ (
    .A(_0184_),
    .B(_0185_),
    .Y(_0186_)
  );
  NOR _0682_ (
    .A(addr_read[1]),
    .B(_0186_),
    .Y(_0187_)
  );
  NOR _0683_ (
    .A(_0183_),
    .B(_0187_),
    .Y(_0188_)
  );
  NOR _0684_ (
    .A(_0097_),
    .B(_0188_),
    .Y(_0189_)
  );
  NOR _0685_ (
    .A(\memoria[3] [0]),
    .B(_0095_),
    .Y(_0190_)
  );
  NOR _0686_ (
    .A(\memoria[2] [0]),
    .B(addr_read[0]),
    .Y(_0191_)
  );
  NOR _0687_ (
    .A(_0190_),
    .B(_0191_),
    .Y(_0192_)
  );
  NOR _0688_ (
    .A(_0096_),
    .B(_0192_),
    .Y(_0193_)
  );
  NOR _0689_ (
    .A(\memoria[1] [0]),
    .B(_0095_),
    .Y(_0194_)
  );
  NOR _0690_ (
    .A(\memoria[0] [0]),
    .B(addr_read[0]),
    .Y(_0195_)
  );
  NOR _0691_ (
    .A(_0194_),
    .B(_0195_),
    .Y(_0196_)
  );
  NOR _0692_ (
    .A(addr_read[1]),
    .B(_0196_),
    .Y(_0197_)
  );
  NOR _0693_ (
    .A(_0193_),
    .B(_0197_),
    .Y(_0198_)
  );
  NOR _0694_ (
    .A(addr_read[2]),
    .B(_0198_),
    .Y(_0199_)
  );
  NOR _0695_ (
    .A(_0189_),
    .B(_0199_),
    .Y(_0200_)
  );
  NOR _0696_ (
    .A(_0081_),
    .B(_0200_),
    .Y(_0201_)
  );
  NOR _0697_ (
    .A(data_out_synt[0]),
    .B(read),
    .Y(_0202_)
  );
  NOT _0698_ (
    .A(_0202_),
    .Y(_0203_)
  );
  NAND _0699_ (
    .A(reset),
    .B(_0203_),
    .Y(_0204_)
  );
  NOR _0700_ (
    .A(_0201_),
    .B(_0204_),
    .Y(_0000_[0])
  );
  NOR _0701_ (
    .A(\memoria[7] [1]),
    .B(_0095_),
    .Y(_0205_)
  );
  NOR _0702_ (
    .A(\memoria[6] [1]),
    .B(addr_read[0]),
    .Y(_0206_)
  );
  NOR _0703_ (
    .A(_0205_),
    .B(_0206_),
    .Y(_0207_)
  );
  NOR _0704_ (
    .A(_0096_),
    .B(_0207_),
    .Y(_0208_)
  );
  NOR _0705_ (
    .A(\memoria[5] [1]),
    .B(_0095_),
    .Y(_0209_)
  );
  NOR _0706_ (
    .A(\memoria[4] [1]),
    .B(addr_read[0]),
    .Y(_0210_)
  );
  NOR _0707_ (
    .A(_0209_),
    .B(_0210_),
    .Y(_0211_)
  );
  NOR _0708_ (
    .A(addr_read[1]),
    .B(_0211_),
    .Y(_0212_)
  );
  NOR _0709_ (
    .A(_0208_),
    .B(_0212_),
    .Y(_0213_)
  );
  NOR _0710_ (
    .A(_0097_),
    .B(_0213_),
    .Y(_0214_)
  );
  NOR _0711_ (
    .A(\memoria[3] [1]),
    .B(_0095_),
    .Y(_0215_)
  );
  NOR _0712_ (
    .A(\memoria[2] [1]),
    .B(addr_read[0]),
    .Y(_0216_)
  );
  NOR _0713_ (
    .A(_0215_),
    .B(_0216_),
    .Y(_0217_)
  );
  NOR _0714_ (
    .A(_0096_),
    .B(_0217_),
    .Y(_0218_)
  );
  NOR _0715_ (
    .A(\memoria[1] [1]),
    .B(_0095_),
    .Y(_0219_)
  );
  NOR _0716_ (
    .A(\memoria[0] [1]),
    .B(addr_read[0]),
    .Y(_0220_)
  );
  NOR _0717_ (
    .A(_0219_),
    .B(_0220_),
    .Y(_0221_)
  );
  NOR _0718_ (
    .A(addr_read[1]),
    .B(_0221_),
    .Y(_0222_)
  );
  NOR _0719_ (
    .A(_0218_),
    .B(_0222_),
    .Y(_0223_)
  );
  NOR _0720_ (
    .A(addr_read[2]),
    .B(_0223_),
    .Y(_0224_)
  );
  NOR _0721_ (
    .A(_0214_),
    .B(_0224_),
    .Y(_0225_)
  );
  NOR _0722_ (
    .A(_0081_),
    .B(_0225_),
    .Y(_0226_)
  );
  NOR _0723_ (
    .A(read),
    .B(data_out_synt[1]),
    .Y(_0227_)
  );
  NOT _0724_ (
    .A(_0227_),
    .Y(_0228_)
  );
  NAND _0725_ (
    .A(reset),
    .B(_0228_),
    .Y(_0229_)
  );
  NOR _0726_ (
    .A(_0226_),
    .B(_0229_),
    .Y(_0000_[1])
  );
  NOR _0727_ (
    .A(\memoria[7] [2]),
    .B(_0095_),
    .Y(_0230_)
  );
  NOR _0728_ (
    .A(\memoria[6] [2]),
    .B(addr_read[0]),
    .Y(_0231_)
  );
  NOR _0729_ (
    .A(_0230_),
    .B(_0231_),
    .Y(_0232_)
  );
  NOR _0730_ (
    .A(_0096_),
    .B(_0232_),
    .Y(_0233_)
  );
  NOR _0731_ (
    .A(\memoria[5] [2]),
    .B(_0095_),
    .Y(_0234_)
  );
  NOR _0732_ (
    .A(\memoria[4] [2]),
    .B(addr_read[0]),
    .Y(_0235_)
  );
  NOR _0733_ (
    .A(_0234_),
    .B(_0235_),
    .Y(_0236_)
  );
  NOR _0734_ (
    .A(addr_read[1]),
    .B(_0236_),
    .Y(_0237_)
  );
  NOR _0735_ (
    .A(_0233_),
    .B(_0237_),
    .Y(_0238_)
  );
  NOR _0736_ (
    .A(_0097_),
    .B(_0238_),
    .Y(_0239_)
  );
  NOR _0737_ (
    .A(\memoria[3] [2]),
    .B(_0095_),
    .Y(_0240_)
  );
  NOR _0738_ (
    .A(\memoria[2] [2]),
    .B(addr_read[0]),
    .Y(_0241_)
  );
  NOR _0739_ (
    .A(_0240_),
    .B(_0241_),
    .Y(_0242_)
  );
  NOR _0740_ (
    .A(_0096_),
    .B(_0242_),
    .Y(_0243_)
  );
  NOR _0741_ (
    .A(\memoria[1] [2]),
    .B(_0095_),
    .Y(_0244_)
  );
  NOR _0742_ (
    .A(\memoria[0] [2]),
    .B(addr_read[0]),
    .Y(_0245_)
  );
  NOR _0743_ (
    .A(_0244_),
    .B(_0245_),
    .Y(_0246_)
  );
  NOR _0744_ (
    .A(addr_read[1]),
    .B(_0246_),
    .Y(_0247_)
  );
  NOR _0745_ (
    .A(_0243_),
    .B(_0247_),
    .Y(_0248_)
  );
  NOR _0746_ (
    .A(addr_read[2]),
    .B(_0248_),
    .Y(_0249_)
  );
  NOR _0747_ (
    .A(_0239_),
    .B(_0249_),
    .Y(_0250_)
  );
  NOR _0748_ (
    .A(_0081_),
    .B(_0250_),
    .Y(_0251_)
  );
  NOR _0749_ (
    .A(read),
    .B(data_out_synt[2]),
    .Y(_0252_)
  );
  NOT _0750_ (
    .A(_0252_),
    .Y(_0253_)
  );
  NAND _0751_ (
    .A(reset),
    .B(_0253_),
    .Y(_0254_)
  );
  NOR _0752_ (
    .A(_0251_),
    .B(_0254_),
    .Y(_0000_[2])
  );
  NOR _0753_ (
    .A(\memoria[7] [3]),
    .B(_0095_),
    .Y(_0255_)
  );
  NOR _0754_ (
    .A(\memoria[6] [3]),
    .B(addr_read[0]),
    .Y(_0256_)
  );
  NOR _0755_ (
    .A(_0255_),
    .B(_0256_),
    .Y(_0257_)
  );
  NOR _0756_ (
    .A(_0096_),
    .B(_0257_),
    .Y(_0258_)
  );
  NOR _0757_ (
    .A(\memoria[5] [3]),
    .B(_0095_),
    .Y(_0259_)
  );
  NOR _0758_ (
    .A(\memoria[4] [3]),
    .B(addr_read[0]),
    .Y(_0260_)
  );
  NOR _0759_ (
    .A(_0259_),
    .B(_0260_),
    .Y(_0261_)
  );
  NOR _0760_ (
    .A(addr_read[1]),
    .B(_0261_),
    .Y(_0262_)
  );
  NOR _0761_ (
    .A(_0258_),
    .B(_0262_),
    .Y(_0263_)
  );
  NOR _0762_ (
    .A(_0097_),
    .B(_0263_),
    .Y(_0264_)
  );
  NOR _0763_ (
    .A(\memoria[3] [3]),
    .B(_0095_),
    .Y(_0265_)
  );
  NOR _0764_ (
    .A(\memoria[2] [3]),
    .B(addr_read[0]),
    .Y(_0266_)
  );
  NOR _0765_ (
    .A(_0265_),
    .B(_0266_),
    .Y(_0267_)
  );
  NOR _0766_ (
    .A(_0096_),
    .B(_0267_),
    .Y(_0268_)
  );
  NOR _0767_ (
    .A(\memoria[1] [3]),
    .B(_0095_),
    .Y(_0269_)
  );
  NOR _0768_ (
    .A(\memoria[0] [3]),
    .B(addr_read[0]),
    .Y(_0270_)
  );
  NOR _0769_ (
    .A(_0269_),
    .B(_0270_),
    .Y(_0271_)
  );
  NOR _0770_ (
    .A(addr_read[1]),
    .B(_0271_),
    .Y(_0272_)
  );
  NOR _0771_ (
    .A(_0268_),
    .B(_0272_),
    .Y(_0273_)
  );
  NOR _0772_ (
    .A(addr_read[2]),
    .B(_0273_),
    .Y(_0274_)
  );
  NOR _0773_ (
    .A(_0264_),
    .B(_0274_),
    .Y(_0275_)
  );
  NOR _0774_ (
    .A(_0081_),
    .B(_0275_),
    .Y(_0276_)
  );
  NOR _0775_ (
    .A(read),
    .B(data_out_synt[3]),
    .Y(_0277_)
  );
  NOT _0776_ (
    .A(_0277_),
    .Y(_0278_)
  );
  NAND _0777_ (
    .A(reset),
    .B(_0278_),
    .Y(_0279_)
  );
  NOR _0778_ (
    .A(_0276_),
    .B(_0279_),
    .Y(_0000_[3])
  );
  NOR _0779_ (
    .A(\memoria[7] [4]),
    .B(_0095_),
    .Y(_0280_)
  );
  NOR _0780_ (
    .A(\memoria[6] [4]),
    .B(addr_read[0]),
    .Y(_0281_)
  );
  NOR _0781_ (
    .A(_0280_),
    .B(_0281_),
    .Y(_0282_)
  );
  NOR _0782_ (
    .A(_0096_),
    .B(_0282_),
    .Y(_0283_)
  );
  NOR _0783_ (
    .A(\memoria[5] [4]),
    .B(_0095_),
    .Y(_0284_)
  );
  NOR _0784_ (
    .A(\memoria[4] [4]),
    .B(addr_read[0]),
    .Y(_0285_)
  );
  NOR _0785_ (
    .A(_0284_),
    .B(_0285_),
    .Y(_0286_)
  );
  NOR _0786_ (
    .A(addr_read[1]),
    .B(_0286_),
    .Y(_0287_)
  );
  NOR _0787_ (
    .A(_0283_),
    .B(_0287_),
    .Y(_0288_)
  );
  NOR _0788_ (
    .A(_0097_),
    .B(_0288_),
    .Y(_0289_)
  );
  NOR _0789_ (
    .A(\memoria[3] [4]),
    .B(_0095_),
    .Y(_0290_)
  );
  NOR _0790_ (
    .A(\memoria[2] [4]),
    .B(addr_read[0]),
    .Y(_0291_)
  );
  NOR _0791_ (
    .A(_0290_),
    .B(_0291_),
    .Y(_0292_)
  );
  NOR _0792_ (
    .A(_0096_),
    .B(_0292_),
    .Y(_0293_)
  );
  NOR _0793_ (
    .A(\memoria[1] [4]),
    .B(_0095_),
    .Y(_0294_)
  );
  NOR _0794_ (
    .A(\memoria[0] [4]),
    .B(addr_read[0]),
    .Y(_0295_)
  );
  NOR _0795_ (
    .A(_0294_),
    .B(_0295_),
    .Y(_0296_)
  );
  NOR _0796_ (
    .A(addr_read[1]),
    .B(_0296_),
    .Y(_0297_)
  );
  NOR _0797_ (
    .A(_0293_),
    .B(_0297_),
    .Y(_0298_)
  );
  NOR _0798_ (
    .A(addr_read[2]),
    .B(_0298_),
    .Y(_0299_)
  );
  NOR _0799_ (
    .A(_0289_),
    .B(_0299_),
    .Y(_0300_)
  );
  NOR _0800_ (
    .A(_0081_),
    .B(_0300_),
    .Y(_0301_)
  );
  NOR _0801_ (
    .A(read),
    .B(data_out_synt[4]),
    .Y(_0302_)
  );
  NOT _0802_ (
    .A(_0302_),
    .Y(_0303_)
  );
  NAND _0803_ (
    .A(reset),
    .B(_0303_),
    .Y(_0304_)
  );
  NOR _0804_ (
    .A(_0301_),
    .B(_0304_),
    .Y(_0000_[4])
  );
  NOR _0805_ (
    .A(\memoria[7] [5]),
    .B(_0095_),
    .Y(_0305_)
  );
  NOR _0806_ (
    .A(\memoria[6] [5]),
    .B(addr_read[0]),
    .Y(_0306_)
  );
  NOR _0807_ (
    .A(_0305_),
    .B(_0306_),
    .Y(_0307_)
  );
  NOR _0808_ (
    .A(_0096_),
    .B(_0307_),
    .Y(_0308_)
  );
  NOR _0809_ (
    .A(\memoria[5] [5]),
    .B(_0095_),
    .Y(_0309_)
  );
  NOR _0810_ (
    .A(\memoria[4] [5]),
    .B(addr_read[0]),
    .Y(_0310_)
  );
  NOR _0811_ (
    .A(_0309_),
    .B(_0310_),
    .Y(_0311_)
  );
  NOR _0812_ (
    .A(addr_read[1]),
    .B(_0311_),
    .Y(_0312_)
  );
  NOR _0813_ (
    .A(_0308_),
    .B(_0312_),
    .Y(_0313_)
  );
  NOR _0814_ (
    .A(_0097_),
    .B(_0313_),
    .Y(_0314_)
  );
  NOR _0815_ (
    .A(\memoria[3] [5]),
    .B(_0095_),
    .Y(_0315_)
  );
  NOR _0816_ (
    .A(\memoria[2] [5]),
    .B(addr_read[0]),
    .Y(_0316_)
  );
  NOR _0817_ (
    .A(_0315_),
    .B(_0316_),
    .Y(_0317_)
  );
  NOR _0818_ (
    .A(_0096_),
    .B(_0317_),
    .Y(_0318_)
  );
  NOR _0819_ (
    .A(\memoria[1] [5]),
    .B(_0095_),
    .Y(_0319_)
  );
  NOR _0820_ (
    .A(\memoria[0] [5]),
    .B(addr_read[0]),
    .Y(_0320_)
  );
  NOR _0821_ (
    .A(_0319_),
    .B(_0320_),
    .Y(_0321_)
  );
  NOR _0822_ (
    .A(addr_read[1]),
    .B(_0321_),
    .Y(_0322_)
  );
  NOR _0823_ (
    .A(_0318_),
    .B(_0322_),
    .Y(_0323_)
  );
  NOR _0824_ (
    .A(addr_read[2]),
    .B(_0323_),
    .Y(_0324_)
  );
  NOR _0825_ (
    .A(_0314_),
    .B(_0324_),
    .Y(_0325_)
  );
  NOR _0826_ (
    .A(_0081_),
    .B(_0325_),
    .Y(_0326_)
  );
  NOR _0827_ (
    .A(read),
    .B(data_out_synt[5]),
    .Y(_0327_)
  );
  NOT _0828_ (
    .A(_0327_),
    .Y(_0328_)
  );
  NAND _0829_ (
    .A(reset),
    .B(_0328_),
    .Y(_0329_)
  );
  NOR _0830_ (
    .A(_0326_),
    .B(_0329_),
    .Y(_0000_[5])
  );
  NOR _0831_ (
    .A(\memoria[7] [6]),
    .B(_0095_),
    .Y(_0330_)
  );
  NOR _0832_ (
    .A(\memoria[6] [6]),
    .B(addr_read[0]),
    .Y(_0331_)
  );
  NOR _0833_ (
    .A(_0330_),
    .B(_0331_),
    .Y(_0332_)
  );
  NOR _0834_ (
    .A(_0096_),
    .B(_0332_),
    .Y(_0333_)
  );
  NOR _0835_ (
    .A(\memoria[5] [6]),
    .B(_0095_),
    .Y(_0334_)
  );
  NOR _0836_ (
    .A(\memoria[4] [6]),
    .B(addr_read[0]),
    .Y(_0335_)
  );
  NOR _0837_ (
    .A(_0334_),
    .B(_0335_),
    .Y(_0336_)
  );
  NOR _0838_ (
    .A(addr_read[1]),
    .B(_0336_),
    .Y(_0337_)
  );
  NOR _0839_ (
    .A(_0333_),
    .B(_0337_),
    .Y(_0338_)
  );
  NOR _0840_ (
    .A(_0097_),
    .B(_0338_),
    .Y(_0339_)
  );
  NOR _0841_ (
    .A(\memoria[3] [6]),
    .B(_0095_),
    .Y(_0340_)
  );
  NOR _0842_ (
    .A(\memoria[2] [6]),
    .B(addr_read[0]),
    .Y(_0341_)
  );
  NOR _0843_ (
    .A(_0340_),
    .B(_0341_),
    .Y(_0342_)
  );
  NOR _0844_ (
    .A(_0096_),
    .B(_0342_),
    .Y(_0343_)
  );
  NOR _0845_ (
    .A(\memoria[1] [6]),
    .B(_0095_),
    .Y(_0344_)
  );
  NOR _0846_ (
    .A(\memoria[0] [6]),
    .B(addr_read[0]),
    .Y(_0345_)
  );
  NOR _0847_ (
    .A(_0344_),
    .B(_0345_),
    .Y(_0346_)
  );
  NOR _0848_ (
    .A(addr_read[1]),
    .B(_0346_),
    .Y(_0347_)
  );
  NOR _0849_ (
    .A(_0343_),
    .B(_0347_),
    .Y(_0348_)
  );
  NOR _0850_ (
    .A(addr_read[2]),
    .B(_0348_),
    .Y(_0349_)
  );
  NOR _0851_ (
    .A(_0339_),
    .B(_0349_),
    .Y(_0350_)
  );
  NOR _0852_ (
    .A(_0081_),
    .B(_0350_),
    .Y(_0351_)
  );
  NOR _0853_ (
    .A(read),
    .B(data_out_synt[6]),
    .Y(_0352_)
  );
  NOT _0854_ (
    .A(_0352_),
    .Y(_0353_)
  );
  NAND _0855_ (
    .A(reset),
    .B(_0353_),
    .Y(_0354_)
  );
  NOR _0856_ (
    .A(_0351_),
    .B(_0354_),
    .Y(_0000_[6])
  );
  NOR _0857_ (
    .A(\memoria[7] [7]),
    .B(_0095_),
    .Y(_0355_)
  );
  NOR _0858_ (
    .A(\memoria[6] [7]),
    .B(addr_read[0]),
    .Y(_0356_)
  );
  NOR _0859_ (
    .A(_0355_),
    .B(_0356_),
    .Y(_0357_)
  );
  NOR _0860_ (
    .A(_0096_),
    .B(_0357_),
    .Y(_0358_)
  );
  NOR _0861_ (
    .A(\memoria[5] [7]),
    .B(_0095_),
    .Y(_0359_)
  );
  NOR _0862_ (
    .A(\memoria[4] [7]),
    .B(addr_read[0]),
    .Y(_0360_)
  );
  NOR _0863_ (
    .A(_0359_),
    .B(_0360_),
    .Y(_0361_)
  );
  NOR _0864_ (
    .A(addr_read[1]),
    .B(_0361_),
    .Y(_0362_)
  );
  NOR _0865_ (
    .A(_0358_),
    .B(_0362_),
    .Y(_0363_)
  );
  NOR _0866_ (
    .A(_0097_),
    .B(_0363_),
    .Y(_0364_)
  );
  NOR _0867_ (
    .A(\memoria[3] [7]),
    .B(_0095_),
    .Y(_0365_)
  );
  NOR _0868_ (
    .A(\memoria[2] [7]),
    .B(addr_read[0]),
    .Y(_0366_)
  );
  NOR _0869_ (
    .A(_0365_),
    .B(_0366_),
    .Y(_0367_)
  );
  NOR _0870_ (
    .A(_0096_),
    .B(_0367_),
    .Y(_0368_)
  );
  NOR _0871_ (
    .A(\memoria[1] [7]),
    .B(_0095_),
    .Y(_0369_)
  );
  NOR _0872_ (
    .A(\memoria[0] [7]),
    .B(addr_read[0]),
    .Y(_0370_)
  );
  NOR _0873_ (
    .A(_0369_),
    .B(_0370_),
    .Y(_0371_)
  );
  NOR _0874_ (
    .A(addr_read[1]),
    .B(_0371_),
    .Y(_0372_)
  );
  NOR _0875_ (
    .A(_0368_),
    .B(_0372_),
    .Y(_0373_)
  );
  NOR _0876_ (
    .A(addr_read[2]),
    .B(_0373_),
    .Y(_0374_)
  );
  NOR _0877_ (
    .A(_0364_),
    .B(_0374_),
    .Y(_0375_)
  );
  NOR _0878_ (
    .A(_0081_),
    .B(_0375_),
    .Y(_0376_)
  );
  NOR _0879_ (
    .A(read),
    .B(data_out_synt[7]),
    .Y(_0377_)
  );
  NOT _0880_ (
    .A(_0377_),
    .Y(_0378_)
  );
  NAND _0881_ (
    .A(reset),
    .B(_0378_),
    .Y(_0379_)
  );
  NOR _0882_ (
    .A(_0376_),
    .B(_0379_),
    .Y(_0000_[7])
  );
  NOR _0883_ (
    .A(\memoria[7] [8]),
    .B(_0095_),
    .Y(_0380_)
  );
  NOR _0884_ (
    .A(\memoria[6] [8]),
    .B(addr_read[0]),
    .Y(_0381_)
  );
  NOR _0885_ (
    .A(_0380_),
    .B(_0381_),
    .Y(_0382_)
  );
  NOR _0886_ (
    .A(_0096_),
    .B(_0382_),
    .Y(_0383_)
  );
  NOR _0887_ (
    .A(\memoria[5] [8]),
    .B(_0095_),
    .Y(_0384_)
  );
  NOR _0888_ (
    .A(\memoria[4] [8]),
    .B(addr_read[0]),
    .Y(_0385_)
  );
  NOR _0889_ (
    .A(_0384_),
    .B(_0385_),
    .Y(_0386_)
  );
  NOR _0890_ (
    .A(addr_read[1]),
    .B(_0386_),
    .Y(_0387_)
  );
  NOR _0891_ (
    .A(_0383_),
    .B(_0387_),
    .Y(_0388_)
  );
  NOR _0892_ (
    .A(_0097_),
    .B(_0388_),
    .Y(_0389_)
  );
  NOR _0893_ (
    .A(\memoria[3] [8]),
    .B(_0095_),
    .Y(_0390_)
  );
  NOR _0894_ (
    .A(\memoria[2] [8]),
    .B(addr_read[0]),
    .Y(_0391_)
  );
  NOR _0895_ (
    .A(_0390_),
    .B(_0391_),
    .Y(_0392_)
  );
  NOR _0896_ (
    .A(_0096_),
    .B(_0392_),
    .Y(_0393_)
  );
  NOR _0897_ (
    .A(\memoria[1] [8]),
    .B(_0095_),
    .Y(_0394_)
  );
  NOR _0898_ (
    .A(\memoria[0] [8]),
    .B(addr_read[0]),
    .Y(_0395_)
  );
  NOR _0899_ (
    .A(_0394_),
    .B(_0395_),
    .Y(_0396_)
  );
  NOR _0900_ (
    .A(addr_read[1]),
    .B(_0396_),
    .Y(_0397_)
  );
  NOR _0901_ (
    .A(_0393_),
    .B(_0397_),
    .Y(_0398_)
  );
  NOR _0902_ (
    .A(addr_read[2]),
    .B(_0398_),
    .Y(_0399_)
  );
  NOR _0903_ (
    .A(_0389_),
    .B(_0399_),
    .Y(_0400_)
  );
  NOR _0904_ (
    .A(_0081_),
    .B(_0400_),
    .Y(_0401_)
  );
  NOR _0905_ (
    .A(read),
    .B(data_out_synt[8]),
    .Y(_0402_)
  );
  NOT _0906_ (
    .A(_0402_),
    .Y(_0403_)
  );
  NAND _0907_ (
    .A(reset),
    .B(_0403_),
    .Y(_0404_)
  );
  NOR _0908_ (
    .A(_0401_),
    .B(_0404_),
    .Y(_0000_[8])
  );
  NOR _0909_ (
    .A(\memoria[7] [9]),
    .B(_0095_),
    .Y(_0405_)
  );
  NOR _0910_ (
    .A(\memoria[6] [9]),
    .B(addr_read[0]),
    .Y(_0406_)
  );
  NOR _0911_ (
    .A(_0405_),
    .B(_0406_),
    .Y(_0407_)
  );
  NOR _0912_ (
    .A(_0096_),
    .B(_0407_),
    .Y(_0408_)
  );
  NOR _0913_ (
    .A(\memoria[5] [9]),
    .B(_0095_),
    .Y(_0409_)
  );
  NOR _0914_ (
    .A(\memoria[4] [9]),
    .B(addr_read[0]),
    .Y(_0410_)
  );
  NOR _0915_ (
    .A(_0409_),
    .B(_0410_),
    .Y(_0411_)
  );
  NOR _0916_ (
    .A(addr_read[1]),
    .B(_0411_),
    .Y(_0412_)
  );
  NOR _0917_ (
    .A(_0408_),
    .B(_0412_),
    .Y(_0413_)
  );
  NOR _0918_ (
    .A(_0097_),
    .B(_0413_),
    .Y(_0414_)
  );
  NOR _0919_ (
    .A(\memoria[3] [9]),
    .B(_0095_),
    .Y(_0415_)
  );
  NOR _0920_ (
    .A(\memoria[2] [9]),
    .B(addr_read[0]),
    .Y(_0416_)
  );
  NOR _0921_ (
    .A(_0415_),
    .B(_0416_),
    .Y(_0417_)
  );
  NOR _0922_ (
    .A(_0096_),
    .B(_0417_),
    .Y(_0418_)
  );
  NOR _0923_ (
    .A(\memoria[1] [9]),
    .B(_0095_),
    .Y(_0419_)
  );
  NOR _0924_ (
    .A(\memoria[0] [9]),
    .B(addr_read[0]),
    .Y(_0420_)
  );
  NOR _0925_ (
    .A(_0419_),
    .B(_0420_),
    .Y(_0421_)
  );
  NOR _0926_ (
    .A(addr_read[1]),
    .B(_0421_),
    .Y(_0422_)
  );
  NOR _0927_ (
    .A(_0418_),
    .B(_0422_),
    .Y(_0423_)
  );
  NOR _0928_ (
    .A(addr_read[2]),
    .B(_0423_),
    .Y(_0424_)
  );
  NOR _0929_ (
    .A(_0414_),
    .B(_0424_),
    .Y(_0425_)
  );
  NOR _0930_ (
    .A(_0081_),
    .B(_0425_),
    .Y(_0426_)
  );
  NOR _0931_ (
    .A(read),
    .B(data_out_synt[9]),
    .Y(_0427_)
  );
  NOT _0932_ (
    .A(_0427_),
    .Y(_0428_)
  );
  NAND _0933_ (
    .A(reset),
    .B(_0428_),
    .Y(_0429_)
  );
  NOR _0934_ (
    .A(_0426_),
    .B(_0429_),
    .Y(_0000_[9])
  );
  NOR _0935_ (
    .A(addr_write[0]),
    .B(_0157_),
    .Y(_0430_)
  );
  NAND _0936_ (
    .A(_0093_),
    .B(_0156_),
    .Y(_0431_)
  );
  NAND _0937_ (
    .A(_0134_),
    .B(_0430_),
    .Y(_0432_)
  );
  NAND _0938_ (
    .A(\memoria[4] [0]),
    .B(_0431_),
    .Y(_0433_)
  );
  NAND _0939_ (
    .A(_0432_),
    .B(_0433_),
    .Y(_0041_)
  );
  NAND _0940_ (
    .A(_0106_),
    .B(_0430_),
    .Y(_0434_)
  );
  NAND _0941_ (
    .A(\memoria[4] [1]),
    .B(_0431_),
    .Y(_0435_)
  );
  NAND _0942_ (
    .A(_0434_),
    .B(_0435_),
    .Y(_0042_)
  );
  NAND _0943_ (
    .A(_0108_),
    .B(_0430_),
    .Y(_0436_)
  );
  NAND _0944_ (
    .A(\memoria[4] [2]),
    .B(_0431_),
    .Y(_0437_)
  );
  NAND _0945_ (
    .A(_0436_),
    .B(_0437_),
    .Y(_0043_)
  );
  NAND _0946_ (
    .A(_0112_),
    .B(_0430_),
    .Y(_0438_)
  );
  NAND _0947_ (
    .A(\memoria[4] [3]),
    .B(_0431_),
    .Y(_0439_)
  );
  NAND _0948_ (
    .A(_0438_),
    .B(_0439_),
    .Y(_0044_)
  );
  NAND _0949_ (
    .A(_0114_),
    .B(_0430_),
    .Y(_0440_)
  );
  NAND _0950_ (
    .A(\memoria[4] [4]),
    .B(_0431_),
    .Y(_0441_)
  );
  NAND _0951_ (
    .A(_0440_),
    .B(_0441_),
    .Y(_0045_)
  );
  NAND _0952_ (
    .A(_0117_),
    .B(_0430_),
    .Y(_0442_)
  );
  NAND _0953_ (
    .A(\memoria[4] [5]),
    .B(_0431_),
    .Y(_0443_)
  );
  NAND _0954_ (
    .A(_0442_),
    .B(_0443_),
    .Y(_0046_)
  );
  NAND _0955_ (
    .A(_0121_),
    .B(_0430_),
    .Y(_0444_)
  );
  NAND _0956_ (
    .A(\memoria[4] [6]),
    .B(_0431_),
    .Y(_0445_)
  );
  NAND _0957_ (
    .A(_0444_),
    .B(_0445_),
    .Y(_0047_)
  );
  NAND _0958_ (
    .A(_0124_),
    .B(_0430_),
    .Y(_0446_)
  );
  NAND _0959_ (
    .A(\memoria[4] [7]),
    .B(_0431_),
    .Y(_0447_)
  );
  NAND _0960_ (
    .A(_0446_),
    .B(_0447_),
    .Y(_0048_)
  );
  NAND _0961_ (
    .A(_0126_),
    .B(_0430_),
    .Y(_0448_)
  );
  NAND _0962_ (
    .A(\memoria[4] [8]),
    .B(_0431_),
    .Y(_0449_)
  );
  NAND _0963_ (
    .A(_0448_),
    .B(_0449_),
    .Y(_0049_)
  );
  NAND _0964_ (
    .A(_0130_),
    .B(_0430_),
    .Y(_0450_)
  );
  NAND _0965_ (
    .A(\memoria[4] [9]),
    .B(_0431_),
    .Y(_0451_)
  );
  NAND _0966_ (
    .A(_0450_),
    .B(_0451_),
    .Y(_0050_)
  );
  NOR _0967_ (
    .A(_0083_),
    .B(addr_write[2]),
    .Y(_0452_)
  );
  NOR _0968_ (
    .A(addr_write[2]),
    .B(_0100_),
    .Y(_0453_)
  );
  NAND _0969_ (
    .A(addr_write[1]),
    .B(_0452_),
    .Y(_0454_)
  );
  NOR _0970_ (
    .A(_0093_),
    .B(_0454_),
    .Y(_0455_)
  );
  NAND _0971_ (
    .A(addr_write[0]),
    .B(_0453_),
    .Y(_0456_)
  );
  NAND _0972_ (
    .A(_0134_),
    .B(_0455_),
    .Y(_0457_)
  );
  NAND _0973_ (
    .A(\memoria[3] [0]),
    .B(_0456_),
    .Y(_0458_)
  );
  NAND _0974_ (
    .A(_0457_),
    .B(_0458_),
    .Y(_0031_)
  );
  NAND _0975_ (
    .A(_0106_),
    .B(_0455_),
    .Y(_0459_)
  );
  NAND _0976_ (
    .A(\memoria[3] [1]),
    .B(_0456_),
    .Y(_0460_)
  );
  NAND _0977_ (
    .A(_0459_),
    .B(_0460_),
    .Y(_0032_)
  );
  NAND _0978_ (
    .A(_0108_),
    .B(_0455_),
    .Y(_0461_)
  );
  NAND _0979_ (
    .A(\memoria[3] [2]),
    .B(_0456_),
    .Y(_0462_)
  );
  NAND _0980_ (
    .A(_0461_),
    .B(_0462_),
    .Y(_0033_)
  );
  NAND _0981_ (
    .A(_0112_),
    .B(_0455_),
    .Y(_0463_)
  );
  NAND _0982_ (
    .A(\memoria[3] [3]),
    .B(_0456_),
    .Y(_0464_)
  );
  NAND _0983_ (
    .A(_0463_),
    .B(_0464_),
    .Y(_0034_)
  );
  NAND _0984_ (
    .A(_0114_),
    .B(_0455_),
    .Y(_0465_)
  );
  NAND _0985_ (
    .A(\memoria[3] [4]),
    .B(_0456_),
    .Y(_0466_)
  );
  NAND _0986_ (
    .A(_0465_),
    .B(_0466_),
    .Y(_0035_)
  );
  NAND _0987_ (
    .A(_0117_),
    .B(_0455_),
    .Y(_0467_)
  );
  NAND _0988_ (
    .A(\memoria[3] [5]),
    .B(_0456_),
    .Y(_0468_)
  );
  NAND _0989_ (
    .A(_0467_),
    .B(_0468_),
    .Y(_0036_)
  );
  NAND _0990_ (
    .A(_0121_),
    .B(_0455_),
    .Y(_0469_)
  );
  NAND _0991_ (
    .A(\memoria[3] [6]),
    .B(_0456_),
    .Y(_0470_)
  );
  NAND _0992_ (
    .A(_0469_),
    .B(_0470_),
    .Y(_0037_)
  );
  NAND _0993_ (
    .A(_0124_),
    .B(_0455_),
    .Y(_0471_)
  );
  NAND _0994_ (
    .A(\memoria[3] [7]),
    .B(_0456_),
    .Y(_0472_)
  );
  NAND _0995_ (
    .A(_0471_),
    .B(_0472_),
    .Y(_0038_)
  );
  NAND _0996_ (
    .A(_0126_),
    .B(_0455_),
    .Y(_0473_)
  );
  NAND _0997_ (
    .A(\memoria[3] [8]),
    .B(_0456_),
    .Y(_0474_)
  );
  NAND _0998_ (
    .A(_0473_),
    .B(_0474_),
    .Y(_0039_)
  );
  NAND _0999_ (
    .A(_0130_),
    .B(_0455_),
    .Y(_0475_)
  );
  NAND _1000_ (
    .A(\memoria[3] [9]),
    .B(_0456_),
    .Y(_0476_)
  );
  NAND _1001_ (
    .A(_0475_),
    .B(_0476_),
    .Y(_0040_)
  );
  NOR _1002_ (
    .A(addr_write[0]),
    .B(_0454_),
    .Y(_0477_)
  );
  NAND _1003_ (
    .A(_0093_),
    .B(_0453_),
    .Y(_0478_)
  );
  NAND _1004_ (
    .A(_0134_),
    .B(_0477_),
    .Y(_0479_)
  );
  NAND _1005_ (
    .A(\memoria[2] [0]),
    .B(_0478_),
    .Y(_0480_)
  );
  NAND _1006_ (
    .A(_0479_),
    .B(_0480_),
    .Y(_0021_)
  );
  NAND _1007_ (
    .A(_0106_),
    .B(_0477_),
    .Y(_0481_)
  );
  NAND _1008_ (
    .A(\memoria[2] [1]),
    .B(_0478_),
    .Y(_0482_)
  );
  NAND _1009_ (
    .A(_0481_),
    .B(_0482_),
    .Y(_0022_)
  );
  NAND _1010_ (
    .A(_0108_),
    .B(_0477_),
    .Y(_0483_)
  );
  NAND _1011_ (
    .A(\memoria[2] [2]),
    .B(_0478_),
    .Y(_0484_)
  );
  NAND _1012_ (
    .A(_0483_),
    .B(_0484_),
    .Y(_0023_)
  );
  NAND _1013_ (
    .A(_0112_),
    .B(_0477_),
    .Y(_0485_)
  );
  NAND _1014_ (
    .A(\memoria[2] [3]),
    .B(_0478_),
    .Y(_0486_)
  );
  NAND _1015_ (
    .A(_0485_),
    .B(_0486_),
    .Y(_0024_)
  );
  NAND _1016_ (
    .A(_0114_),
    .B(_0477_),
    .Y(_0487_)
  );
  NAND _1017_ (
    .A(\memoria[2] [4]),
    .B(_0478_),
    .Y(_0488_)
  );
  NAND _1018_ (
    .A(_0487_),
    .B(_0488_),
    .Y(_0025_)
  );
  NAND _1019_ (
    .A(_0117_),
    .B(_0477_),
    .Y(_0489_)
  );
  NAND _1020_ (
    .A(\memoria[2] [5]),
    .B(_0478_),
    .Y(_0490_)
  );
  NAND _1021_ (
    .A(_0489_),
    .B(_0490_),
    .Y(_0026_)
  );
  NAND _1022_ (
    .A(_0121_),
    .B(_0477_),
    .Y(_0491_)
  );
  NAND _1023_ (
    .A(\memoria[2] [6]),
    .B(_0478_),
    .Y(_0492_)
  );
  NAND _1024_ (
    .A(_0491_),
    .B(_0492_),
    .Y(_0027_)
  );
  NAND _1025_ (
    .A(_0124_),
    .B(_0477_),
    .Y(_0493_)
  );
  NAND _1026_ (
    .A(\memoria[2] [7]),
    .B(_0478_),
    .Y(_0494_)
  );
  NAND _1027_ (
    .A(_0493_),
    .B(_0494_),
    .Y(_0028_)
  );
  NAND _1028_ (
    .A(_0126_),
    .B(_0477_),
    .Y(_0495_)
  );
  NAND _1029_ (
    .A(\memoria[2] [8]),
    .B(_0478_),
    .Y(_0496_)
  );
  NAND _1030_ (
    .A(_0495_),
    .B(_0496_),
    .Y(_0029_)
  );
  NAND _1031_ (
    .A(_0130_),
    .B(_0477_),
    .Y(_0497_)
  );
  NAND _1032_ (
    .A(\memoria[2] [9]),
    .B(_0478_),
    .Y(_0498_)
  );
  NAND _1033_ (
    .A(_0497_),
    .B(_0498_),
    .Y(_0030_)
  );
  NOR _1034_ (
    .A(_0099_),
    .B(_0155_),
    .Y(_0499_)
  );
  NAND _1035_ (
    .A(_0094_),
    .B(_0452_),
    .Y(_0500_)
  );
  NOR _1036_ (
    .A(_0093_),
    .B(_0500_),
    .Y(_0501_)
  );
  NAND _1037_ (
    .A(addr_write[0]),
    .B(_0499_),
    .Y(_0502_)
  );
  NAND _1038_ (
    .A(data_in[0]),
    .B(_0501_),
    .Y(_0503_)
  );
  NAND _1039_ (
    .A(\memoria[1] [0]),
    .B(_0502_),
    .Y(_0504_)
  );
  NAND _1040_ (
    .A(_0503_),
    .B(_0504_),
    .Y(_0011_)
  );
  NAND _1041_ (
    .A(data_in[1]),
    .B(_0501_),
    .Y(_0505_)
  );
  NAND _1042_ (
    .A(\memoria[1] [1]),
    .B(_0502_),
    .Y(_0506_)
  );
  NAND _1043_ (
    .A(_0505_),
    .B(_0506_),
    .Y(_0012_)
  );
  NAND _1044_ (
    .A(data_in[2]),
    .B(_0501_),
    .Y(_0507_)
  );
  NAND _1045_ (
    .A(\memoria[1] [2]),
    .B(_0502_),
    .Y(_0508_)
  );
  NAND _1046_ (
    .A(_0507_),
    .B(_0508_),
    .Y(_0013_)
  );
  NAND _1047_ (
    .A(data_in[3]),
    .B(_0501_),
    .Y(_0509_)
  );
  NAND _1048_ (
    .A(\memoria[1] [3]),
    .B(_0502_),
    .Y(_0510_)
  );
  NAND _1049_ (
    .A(_0509_),
    .B(_0510_),
    .Y(_0014_)
  );
  NAND _1050_ (
    .A(data_in[4]),
    .B(_0501_),
    .Y(_0511_)
  );
  NAND _1051_ (
    .A(\memoria[1] [4]),
    .B(_0502_),
    .Y(_0512_)
  );
  NAND _1052_ (
    .A(_0511_),
    .B(_0512_),
    .Y(_0015_)
  );
  NAND _1053_ (
    .A(data_in[5]),
    .B(_0501_),
    .Y(_0513_)
  );
  NAND _1054_ (
    .A(\memoria[1] [5]),
    .B(_0502_),
    .Y(_0514_)
  );
  NAND _1055_ (
    .A(_0513_),
    .B(_0514_),
    .Y(_0016_)
  );
  NAND _1056_ (
    .A(data_in[6]),
    .B(_0501_),
    .Y(_0515_)
  );
  NAND _1057_ (
    .A(\memoria[1] [6]),
    .B(_0502_),
    .Y(_0516_)
  );
  NAND _1058_ (
    .A(_0515_),
    .B(_0516_),
    .Y(_0017_)
  );
  NAND _1059_ (
    .A(data_in[7]),
    .B(_0501_),
    .Y(_0517_)
  );
  NAND _1060_ (
    .A(\memoria[1] [7]),
    .B(_0502_),
    .Y(_0518_)
  );
  NAND _1061_ (
    .A(_0517_),
    .B(_0518_),
    .Y(_0018_)
  );
  NAND _1062_ (
    .A(data_in[8]),
    .B(_0501_),
    .Y(_0519_)
  );
  NAND _1063_ (
    .A(\memoria[1] [8]),
    .B(_0502_),
    .Y(_0520_)
  );
  NAND _1064_ (
    .A(_0519_),
    .B(_0520_),
    .Y(_0019_)
  );
  NAND _1065_ (
    .A(data_in[9]),
    .B(_0501_),
    .Y(_0521_)
  );
  NAND _1066_ (
    .A(\memoria[1] [9]),
    .B(_0502_),
    .Y(_0522_)
  );
  NAND _1067_ (
    .A(_0521_),
    .B(_0522_),
    .Y(_0020_)
  );
  NOR _1068_ (
    .A(addr_write[0]),
    .B(_0500_),
    .Y(_0523_)
  );
  NAND _1069_ (
    .A(_0093_),
    .B(_0499_),
    .Y(_0524_)
  );
  NAND _1070_ (
    .A(data_in[0]),
    .B(_0523_),
    .Y(_0525_)
  );
  NAND _1071_ (
    .A(\memoria[0] [0]),
    .B(_0524_),
    .Y(_0526_)
  );
  NAND _1072_ (
    .A(_0525_),
    .B(_0526_),
    .Y(_0001_)
  );
  NAND _1073_ (
    .A(data_in[1]),
    .B(_0523_),
    .Y(_0527_)
  );
  NAND _1074_ (
    .A(\memoria[0] [1]),
    .B(_0524_),
    .Y(_0528_)
  );
  NAND _1075_ (
    .A(_0527_),
    .B(_0528_),
    .Y(_0002_)
  );
  NAND _1076_ (
    .A(data_in[2]),
    .B(_0523_),
    .Y(_0529_)
  );
  NAND _1077_ (
    .A(\memoria[0] [2]),
    .B(_0524_),
    .Y(_0530_)
  );
  NAND _1078_ (
    .A(_0529_),
    .B(_0530_),
    .Y(_0003_)
  );
  NAND _1079_ (
    .A(data_in[3]),
    .B(_0523_),
    .Y(_0531_)
  );
  NAND _1080_ (
    .A(\memoria[0] [3]),
    .B(_0524_),
    .Y(_0532_)
  );
  NAND _1081_ (
    .A(_0531_),
    .B(_0532_),
    .Y(_0004_)
  );
  NAND _1082_ (
    .A(data_in[4]),
    .B(_0523_),
    .Y(_0533_)
  );
  NAND _1083_ (
    .A(\memoria[0] [4]),
    .B(_0524_),
    .Y(_0534_)
  );
  NAND _1084_ (
    .A(_0533_),
    .B(_0534_),
    .Y(_0005_)
  );
  NAND _1085_ (
    .A(data_in[5]),
    .B(_0523_),
    .Y(_0535_)
  );
  NAND _1086_ (
    .A(\memoria[0] [5]),
    .B(_0524_),
    .Y(_0536_)
  );
  NAND _1087_ (
    .A(_0535_),
    .B(_0536_),
    .Y(_0006_)
  );
  NAND _1088_ (
    .A(data_in[6]),
    .B(_0523_),
    .Y(_0537_)
  );
  NAND _1089_ (
    .A(\memoria[0] [6]),
    .B(_0524_),
    .Y(_0538_)
  );
  NAND _1090_ (
    .A(_0537_),
    .B(_0538_),
    .Y(_0007_)
  );
  NAND _1091_ (
    .A(data_in[7]),
    .B(_0523_),
    .Y(_0539_)
  );
  NAND _1092_ (
    .A(\memoria[0] [7]),
    .B(_0524_),
    .Y(_0540_)
  );
  NAND _1093_ (
    .A(_0539_),
    .B(_0540_),
    .Y(_0008_)
  );
  NAND _1094_ (
    .A(data_in[8]),
    .B(_0523_),
    .Y(_0541_)
  );
  NAND _1095_ (
    .A(\memoria[0] [8]),
    .B(_0524_),
    .Y(_0542_)
  );
  NAND _1096_ (
    .A(_0541_),
    .B(_0542_),
    .Y(_0009_)
  );
  NAND _1097_ (
    .A(data_in[9]),
    .B(_0523_),
    .Y(_0543_)
  );
  NAND _1098_ (
    .A(\memoria[0] [9]),
    .B(_0524_),
    .Y(_0544_)
  );
  NAND _1099_ (
    .A(_0543_),
    .B(_0544_),
    .Y(_0010_)
  );
  NAND _1100_ (
    .A(_0103_),
    .B(_0134_),
    .Y(_0545_)
  );
  NAND _1101_ (
    .A(\memoria[7] [0]),
    .B(_0104_),
    .Y(_0546_)
  );
  NAND _1102_ (
    .A(_0545_),
    .B(_0546_),
    .Y(_0071_)
  );
  DFF _1103_ (
    .C(clk),
    .D(_0001_),
    .Q(\memoria[0] [0])
  );
  DFF _1104_ (
    .C(clk),
    .D(_0002_),
    .Q(\memoria[0] [1])
  );
  DFF _1105_ (
    .C(clk),
    .D(_0003_),
    .Q(\memoria[0] [2])
  );
  DFF _1106_ (
    .C(clk),
    .D(_0004_),
    .Q(\memoria[0] [3])
  );
  DFF _1107_ (
    .C(clk),
    .D(_0005_),
    .Q(\memoria[0] [4])
  );
  DFF _1108_ (
    .C(clk),
    .D(_0006_),
    .Q(\memoria[0] [5])
  );
  DFF _1109_ (
    .C(clk),
    .D(_0007_),
    .Q(\memoria[0] [6])
  );
  DFF _1110_ (
    .C(clk),
    .D(_0008_),
    .Q(\memoria[0] [7])
  );
  DFF _1111_ (
    .C(clk),
    .D(_0009_),
    .Q(\memoria[0] [8])
  );
  DFF _1112_ (
    .C(clk),
    .D(_0010_),
    .Q(\memoria[0] [9])
  );
  DFF _1113_ (
    .C(clk),
    .D(_0071_),
    .Q(\memoria[7] [0])
  );
  DFF _1114_ (
    .C(clk),
    .D(_0072_),
    .Q(\memoria[7] [1])
  );
  DFF _1115_ (
    .C(clk),
    .D(_0073_),
    .Q(\memoria[7] [2])
  );
  DFF _1116_ (
    .C(clk),
    .D(_0074_),
    .Q(\memoria[7] [3])
  );
  DFF _1117_ (
    .C(clk),
    .D(_0075_),
    .Q(\memoria[7] [4])
  );
  DFF _1118_ (
    .C(clk),
    .D(_0076_),
    .Q(\memoria[7] [5])
  );
  DFF _1119_ (
    .C(clk),
    .D(_0077_),
    .Q(\memoria[7] [6])
  );
  DFF _1120_ (
    .C(clk),
    .D(_0078_),
    .Q(\memoria[7] [7])
  );
  DFF _1121_ (
    .C(clk),
    .D(_0079_),
    .Q(\memoria[7] [8])
  );
  DFF _1122_ (
    .C(clk),
    .D(_0080_),
    .Q(\memoria[7] [9])
  );
  DFF _1123_ (
    .C(clk),
    .D(_0061_),
    .Q(\memoria[6] [0])
  );
  DFF _1124_ (
    .C(clk),
    .D(_0062_),
    .Q(\memoria[6] [1])
  );
  DFF _1125_ (
    .C(clk),
    .D(_0063_),
    .Q(\memoria[6] [2])
  );
  DFF _1126_ (
    .C(clk),
    .D(_0064_),
    .Q(\memoria[6] [3])
  );
  DFF _1127_ (
    .C(clk),
    .D(_0065_),
    .Q(\memoria[6] [4])
  );
  DFF _1128_ (
    .C(clk),
    .D(_0066_),
    .Q(\memoria[6] [5])
  );
  DFF _1129_ (
    .C(clk),
    .D(_0067_),
    .Q(\memoria[6] [6])
  );
  DFF _1130_ (
    .C(clk),
    .D(_0068_),
    .Q(\memoria[6] [7])
  );
  DFF _1131_ (
    .C(clk),
    .D(_0069_),
    .Q(\memoria[6] [8])
  );
  DFF _1132_ (
    .C(clk),
    .D(_0070_),
    .Q(\memoria[6] [9])
  );
  DFF _1133_ (
    .C(clk),
    .D(_0051_),
    .Q(\memoria[5] [0])
  );
  DFF _1134_ (
    .C(clk),
    .D(_0052_),
    .Q(\memoria[5] [1])
  );
  DFF _1135_ (
    .C(clk),
    .D(_0053_),
    .Q(\memoria[5] [2])
  );
  DFF _1136_ (
    .C(clk),
    .D(_0054_),
    .Q(\memoria[5] [3])
  );
  DFF _1137_ (
    .C(clk),
    .D(_0055_),
    .Q(\memoria[5] [4])
  );
  DFF _1138_ (
    .C(clk),
    .D(_0056_),
    .Q(\memoria[5] [5])
  );
  DFF _1139_ (
    .C(clk),
    .D(_0057_),
    .Q(\memoria[5] [6])
  );
  DFF _1140_ (
    .C(clk),
    .D(_0058_),
    .Q(\memoria[5] [7])
  );
  DFF _1141_ (
    .C(clk),
    .D(_0059_),
    .Q(\memoria[5] [8])
  );
  DFF _1142_ (
    .C(clk),
    .D(_0060_),
    .Q(\memoria[5] [9])
  );
  DFF _1143_ (
    .C(clk),
    .D(_0041_),
    .Q(\memoria[4] [0])
  );
  DFF _1144_ (
    .C(clk),
    .D(_0042_),
    .Q(\memoria[4] [1])
  );
  DFF _1145_ (
    .C(clk),
    .D(_0043_),
    .Q(\memoria[4] [2])
  );
  DFF _1146_ (
    .C(clk),
    .D(_0044_),
    .Q(\memoria[4] [3])
  );
  DFF _1147_ (
    .C(clk),
    .D(_0045_),
    .Q(\memoria[4] [4])
  );
  DFF _1148_ (
    .C(clk),
    .D(_0046_),
    .Q(\memoria[4] [5])
  );
  DFF _1149_ (
    .C(clk),
    .D(_0047_),
    .Q(\memoria[4] [6])
  );
  DFF _1150_ (
    .C(clk),
    .D(_0048_),
    .Q(\memoria[4] [7])
  );
  DFF _1151_ (
    .C(clk),
    .D(_0049_),
    .Q(\memoria[4] [8])
  );
  DFF _1152_ (
    .C(clk),
    .D(_0050_),
    .Q(\memoria[4] [9])
  );
  DFF _1153_ (
    .C(clk),
    .D(_0031_),
    .Q(\memoria[3] [0])
  );
  DFF _1154_ (
    .C(clk),
    .D(_0032_),
    .Q(\memoria[3] [1])
  );
  DFF _1155_ (
    .C(clk),
    .D(_0033_),
    .Q(\memoria[3] [2])
  );
  DFF _1156_ (
    .C(clk),
    .D(_0034_),
    .Q(\memoria[3] [3])
  );
  DFF _1157_ (
    .C(clk),
    .D(_0035_),
    .Q(\memoria[3] [4])
  );
  DFF _1158_ (
    .C(clk),
    .D(_0036_),
    .Q(\memoria[3] [5])
  );
  DFF _1159_ (
    .C(clk),
    .D(_0037_),
    .Q(\memoria[3] [6])
  );
  DFF _1160_ (
    .C(clk),
    .D(_0038_),
    .Q(\memoria[3] [7])
  );
  DFF _1161_ (
    .C(clk),
    .D(_0039_),
    .Q(\memoria[3] [8])
  );
  DFF _1162_ (
    .C(clk),
    .D(_0040_),
    .Q(\memoria[3] [9])
  );
  DFF _1163_ (
    .C(clk),
    .D(_0021_),
    .Q(\memoria[2] [0])
  );
  DFF _1164_ (
    .C(clk),
    .D(_0022_),
    .Q(\memoria[2] [1])
  );
  DFF _1165_ (
    .C(clk),
    .D(_0023_),
    .Q(\memoria[2] [2])
  );
  DFF _1166_ (
    .C(clk),
    .D(_0024_),
    .Q(\memoria[2] [3])
  );
  DFF _1167_ (
    .C(clk),
    .D(_0025_),
    .Q(\memoria[2] [4])
  );
  DFF _1168_ (
    .C(clk),
    .D(_0026_),
    .Q(\memoria[2] [5])
  );
  DFF _1169_ (
    .C(clk),
    .D(_0027_),
    .Q(\memoria[2] [6])
  );
  DFF _1170_ (
    .C(clk),
    .D(_0028_),
    .Q(\memoria[2] [7])
  );
  DFF _1171_ (
    .C(clk),
    .D(_0029_),
    .Q(\memoria[2] [8])
  );
  DFF _1172_ (
    .C(clk),
    .D(_0030_),
    .Q(\memoria[2] [9])
  );
  DFF _1173_ (
    .C(clk),
    .D(_0011_),
    .Q(\memoria[1] [0])
  );
  DFF _1174_ (
    .C(clk),
    .D(_0012_),
    .Q(\memoria[1] [1])
  );
  DFF _1175_ (
    .C(clk),
    .D(_0013_),
    .Q(\memoria[1] [2])
  );
  DFF _1176_ (
    .C(clk),
    .D(_0014_),
    .Q(\memoria[1] [3])
  );
  DFF _1177_ (
    .C(clk),
    .D(_0015_),
    .Q(\memoria[1] [4])
  );
  DFF _1178_ (
    .C(clk),
    .D(_0016_),
    .Q(\memoria[1] [5])
  );
  DFF _1179_ (
    .C(clk),
    .D(_0017_),
    .Q(\memoria[1] [6])
  );
  DFF _1180_ (
    .C(clk),
    .D(_0018_),
    .Q(\memoria[1] [7])
  );
  DFF _1181_ (
    .C(clk),
    .D(_0019_),
    .Q(\memoria[1] [8])
  );
  DFF _1182_ (
    .C(clk),
    .D(_0020_),
    .Q(\memoria[1] [9])
  );
  (* src = "ram.v:35" *)
  DFF _1183_ (
    .C(clk),
    .D(_0000_[0]),
    .Q(data_out_synt[0])
  );
  (* src = "ram.v:35" *)
  DFF _1184_ (
    .C(clk),
    .D(_0000_[1]),
    .Q(data_out_synt[1])
  );
  (* src = "ram.v:35" *)
  DFF _1185_ (
    .C(clk),
    .D(_0000_[2]),
    .Q(data_out_synt[2])
  );
  (* src = "ram.v:35" *)
  DFF _1186_ (
    .C(clk),
    .D(_0000_[3]),
    .Q(data_out_synt[3])
  );
  (* src = "ram.v:35" *)
  DFF _1187_ (
    .C(clk),
    .D(_0000_[4]),
    .Q(data_out_synt[4])
  );
  (* src = "ram.v:35" *)
  DFF _1188_ (
    .C(clk),
    .D(_0000_[5]),
    .Q(data_out_synt[5])
  );
  (* src = "ram.v:35" *)
  DFF _1189_ (
    .C(clk),
    .D(_0000_[6]),
    .Q(data_out_synt[6])
  );
  (* src = "ram.v:35" *)
  DFF _1190_ (
    .C(clk),
    .D(_0000_[7]),
    .Q(data_out_synt[7])
  );
  (* src = "ram.v:35" *)
  DFF _1191_ (
    .C(clk),
    .D(_0000_[8]),
    .Q(data_out_synt[8])
  );
  (* src = "ram.v:35" *)
  DFF _1192_ (
    .C(clk),
    .D(_0000_[9]),
    .Q(data_out_synt[9])
  );
endmodule

(* src = "synth_arbitro.v:5" *)
module synth_arbitro(pop0_out_synt, pop1_out_synt, pop2_out_synt, pop3_out_synt, push0_out_synt, push1_out_synt, push2_out_synt, push3_out_synt, demux0_out_synt, dest, empty0, empty1, empty2, empty3, afull0, afull1, afull2, afull3, reset, clk);
  (* src = "synth_arbitro.v:113" *)
  wire [1:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  (* src = "synth_arbitro.v:10" *)
  input afull0;
  (* src = "synth_arbitro.v:10" *)
  input afull1;
  (* src = "synth_arbitro.v:10" *)
  input afull2;
  (* src = "synth_arbitro.v:10" *)
  input afull3;
  (* src = "synth_arbitro.v:19" *)
  wire any;
  (* src = "synth_arbitro.v:21" *)
  wire any_almost_full;
  (* src = "synth_arbitro.v:11" *)
  input clk;
  (* src = "synth_arbitro.v:7" *)
  output [1:0] demux0_out_synt;
  (* src = "synth_arbitro.v:8" *)
  input [1:0] dest;
  (* src = "synth_arbitro.v:9" *)
  input empty0;
  (* src = "synth_arbitro.v:9" *)
  input empty1;
  (* src = "synth_arbitro.v:9" *)
  input empty2;
  (* src = "synth_arbitro.v:9" *)
  input empty3;
  (* src = "synth_arbitro.v:16" *)
  wire [3:0] emptys;
  (* src = "synth_arbitro.v:17" *)
  wire [3:0] emptys2;
  (* src = "synth_arbitro.v:5" *)
  output pop0_out_synt;
  (* src = "synth_arbitro.v:5" *)
  output pop1_out_synt;
  (* src = "synth_arbitro.v:5" *)
  output pop2_out_synt;
  (* src = "synth_arbitro.v:5" *)
  output pop3_out_synt;
  (* src = "synth_arbitro.v:13" *)
  wire [3:0] pops;
  (* src = "synth_arbitro.v:6" *)
  output push0_out_synt;
  (* src = "synth_arbitro.v:6" *)
  output push1_out_synt;
  (* src = "synth_arbitro.v:6" *)
  output push2_out_synt;
  (* src = "synth_arbitro.v:6" *)
  output push3_out_synt;
  (* src = "synth_arbitro.v:14" *)
  wire [3:0] pushs;
  (* src = "synth_arbitro.v:11" *)
  input reset;
  NOT _38_ (
    .A(empty3),
    .Y(_01_)
  );
  NOT _39_ (
    .A(empty2),
    .Y(_02_)
  );
  NOT _40_ (
    .A(empty1),
    .Y(_03_)
  );
  NOT _41_ (
    .A(dest[1]),
    .Y(_04_)
  );
  NOT _42_ (
    .A(dest[0]),
    .Y(_05_)
  );
  NOT _43_ (
    .A(reset),
    .Y(_06_)
  );
  NOT _44_ (
    .A(emptys2[1]),
    .Y(_07_)
  );
  NOR _45_ (
    .A(afull0),
    .B(afull1),
    .Y(_08_)
  );
  NOT _46_ (
    .A(_08_),
    .Y(_09_)
  );
  NOR _47_ (
    .A(afull2),
    .B(afull3),
    .Y(_10_)
  );
  NOT _48_ (
    .A(_10_),
    .Y(_11_)
  );
  NOR _49_ (
    .A(_09_),
    .B(_11_),
    .Y(_12_)
  );
  NOT _50_ (
    .A(_12_),
    .Y(any_almost_full)
  );
  NAND _51_ (
    .A(empty0),
    .B(reset),
    .Y(_13_)
  );
  NOR _52_ (
    .A(empty3),
    .B(_02_),
    .Y(_14_)
  );
  NAND _53_ (
    .A(_01_),
    .B(empty2),
    .Y(_15_)
  );
  NOR _54_ (
    .A(_03_),
    .B(_14_),
    .Y(_16_)
  );
  NOR _55_ (
    .A(_13_),
    .B(_16_),
    .Y(_00_[0])
  );
  NAND _56_ (
    .A(empty1),
    .B(empty0),
    .Y(_17_)
  );
  NOT _57_ (
    .A(_17_),
    .Y(_18_)
  );
  NOR _58_ (
    .A(empty2),
    .B(_17_),
    .Y(_19_)
  );
  NOT _59_ (
    .A(_19_),
    .Y(_20_)
  );
  NOR _60_ (
    .A(_15_),
    .B(_17_),
    .Y(_21_)
  );
  NAND _61_ (
    .A(_14_),
    .B(_18_),
    .Y(_22_)
  );
  NOR _62_ (
    .A(_19_),
    .B(_21_),
    .Y(_23_)
  );
  NOR _63_ (
    .A(_06_),
    .B(_23_),
    .Y(_00_[1])
  );
  NAND _64_ (
    .A(emptys2[2]),
    .B(emptys2[3]),
    .Y(_24_)
  );
  NOR _65_ (
    .A(_07_),
    .B(_24_),
    .Y(_25_)
  );
  NAND _66_ (
    .A(emptys2[0]),
    .B(_25_),
    .Y(_26_)
  );
  NAND _67_ (
    .A(_12_),
    .B(_26_),
    .Y(_27_)
  );
  NOR _68_ (
    .A(dest[1]),
    .B(_06_),
    .Y(_28_)
  );
  NAND _69_ (
    .A(_05_),
    .B(_28_),
    .Y(_29_)
  );
  NOR _70_ (
    .A(_27_),
    .B(_29_),
    .Y(push0_out_synt)
  );
  NAND _71_ (
    .A(dest[0]),
    .B(_28_),
    .Y(_30_)
  );
  NOR _72_ (
    .A(_27_),
    .B(_30_),
    .Y(push1_out_synt)
  );
  NOR _73_ (
    .A(_04_),
    .B(dest[0]),
    .Y(_31_)
  );
  NAND _74_ (
    .A(reset),
    .B(_31_),
    .Y(_32_)
  );
  NAND _75_ (
    .A(reset),
    .B(_12_),
    .Y(_33_)
  );
  NOR _76_ (
    .A(_27_),
    .B(_32_),
    .Y(push2_out_synt)
  );
  NOR _77_ (
    .A(_04_),
    .B(_05_),
    .Y(_34_)
  );
  NOR _78_ (
    .A(_06_),
    .B(any),
    .Y(_35_)
  );
  NAND _79_ (
    .A(_34_),
    .B(_35_),
    .Y(_36_)
  );
  NOR _80_ (
    .A(_27_),
    .B(_36_),
    .Y(push3_out_synt)
  );
  NOR _81_ (
    .A(empty0),
    .B(_33_),
    .Y(pop0_out_synt)
  );
  NAND _82_ (
    .A(_03_),
    .B(_12_),
    .Y(_37_)
  );
  NOR _83_ (
    .A(_13_),
    .B(_37_),
    .Y(pop1_out_synt)
  );
  NOR _84_ (
    .A(_20_),
    .B(_33_),
    .Y(pop2_out_synt)
  );
  NOR _85_ (
    .A(_22_),
    .B(_33_),
    .Y(pop3_out_synt)
  );
  (* src = "synth_arbitro.v:113" *)
  DFF _86_ (
    .C(clk),
    .D(_00_[0]),
    .Q(demux0_out_synt[0])
  );
  (* src = "synth_arbitro.v:113" *)
  DFF _87_ (
    .C(clk),
    .D(_00_[1]),
    .Q(demux0_out_synt[1])
  );
  (* src = "synth_arbitro.v:73" *)
  DFF _88_ (
    .C(clk),
    .D(empty0),
    .Q(emptys2[0])
  );
  (* src = "synth_arbitro.v:73" *)
  DFF _89_ (
    .C(clk),
    .D(empty1),
    .Q(emptys2[1])
  );
  (* src = "synth_arbitro.v:73" *)
  DFF _90_ (
    .C(clk),
    .D(empty2),
    .Q(emptys2[2])
  );
  (* src = "synth_arbitro.v:73" *)
  DFF _91_ (
    .C(clk),
    .D(empty3),
    .Q(emptys2[3])
  );
  (* src = "synth_arbitro.v:20" *)
  DFF _92_ (
    .C(clk),
    .D(any_almost_full),
    .Q(any)
  );
  assign emptys = { empty3, empty2, empty1, empty0 };
  assign pops = { pop3_out_synt, pop2_out_synt, pop1_out_synt, pop0_out_synt };
  assign pushs = { push3_out_synt, push2_out_synt, push1_out_synt, push0_out_synt };
endmodule

(* dynports =  1  *)
(* src = "synth_contadores.v:5" *)
module synth_contadores(counter_out_synt, valid_out_synt, idx, push0, push1, push2, push3, idle, req, clk, reset);
  (* src = "synth_contadores.v:49" *)
  wire [4:0] _000_;
  (* src = "synth_contadores.v:49" *)
  wire [4:0] _001_;
  (* src = "synth_contadores.v:49" *)
  wire [4:0] _002_;
  (* src = "synth_contadores.v:49" *)
  wire [4:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  (* src = "synth_contadores.v:10" *)
  input clk;
  (* src = "synth_contadores.v:12" *)
  wire [4:0] counter0;
  (* src = "synth_contadores.v:12" *)
  wire [4:0] counter1;
  (* src = "synth_contadores.v:12" *)
  wire [4:0] counter2;
  (* src = "synth_contadores.v:12" *)
  wire [4:0] counter3;
  (* src = "synth_contadores.v:6" *)
  output [4:0] counter_out_synt;
  (* src = "synth_contadores.v:10" *)
  input idle;
  (* src = "synth_contadores.v:8" *)
  input [1:0] idx;
  (* src = "synth_contadores.v:9" *)
  input push0;
  (* src = "synth_contadores.v:9" *)
  input push1;
  (* src = "synth_contadores.v:9" *)
  input push2;
  (* src = "synth_contadores.v:9" *)
  input push3;
  (* src = "synth_contadores.v:10" *)
  input req;
  (* src = "synth_contadores.v:10" *)
  input reset;
  (* src = "synth_contadores.v:7" *)
  output valid_out_synt;
  NOT _154_ (
    .A(idx[0]),
    .Y(_113_)
  );
  NOT _155_ (
    .A(idx[1]),
    .Y(_114_)
  );
  NOT _156_ (
    .A(counter3[0]),
    .Y(_115_)
  );
  NOT _157_ (
    .A(push3),
    .Y(_116_)
  );
  NOT _158_ (
    .A(counter3[1]),
    .Y(_117_)
  );
  NOT _159_ (
    .A(counter3[2]),
    .Y(_118_)
  );
  NOT _160_ (
    .A(counter3[4]),
    .Y(_119_)
  );
  NOT _161_ (
    .A(counter1[0]),
    .Y(_120_)
  );
  NOT _162_ (
    .A(push1),
    .Y(_121_)
  );
  NOT _163_ (
    .A(counter1[1]),
    .Y(_122_)
  );
  NOT _164_ (
    .A(counter1[2]),
    .Y(_123_)
  );
  NOT _165_ (
    .A(counter1[4]),
    .Y(_124_)
  );
  NOT _166_ (
    .A(counter2[0]),
    .Y(_125_)
  );
  NOT _167_ (
    .A(push2),
    .Y(_126_)
  );
  NOT _168_ (
    .A(counter2[1]),
    .Y(_127_)
  );
  NOT _169_ (
    .A(counter2[2]),
    .Y(_128_)
  );
  NOT _170_ (
    .A(counter2[3]),
    .Y(_129_)
  );
  NOT _171_ (
    .A(counter2[4]),
    .Y(_130_)
  );
  NOT _172_ (
    .A(counter0[0]),
    .Y(_131_)
  );
  NOT _173_ (
    .A(push0),
    .Y(_132_)
  );
  NOT _174_ (
    .A(counter0[1]),
    .Y(_133_)
  );
  NOT _175_ (
    .A(counter0[2]),
    .Y(_134_)
  );
  NOT _176_ (
    .A(counter0[4]),
    .Y(_135_)
  );
  NOT _177_ (
    .A(req),
    .Y(_136_)
  );
  NOT _178_ (
    .A(idle),
    .Y(_137_)
  );
  NOR _179_ (
    .A(_115_),
    .B(_116_),
    .Y(_138_)
  );
  NAND _180_ (
    .A(counter3[0]),
    .B(push3),
    .Y(_139_)
  );
  NOR _181_ (
    .A(counter3[0]),
    .B(push3),
    .Y(_140_)
  );
  NOT _182_ (
    .A(_140_),
    .Y(_141_)
  );
  NAND _183_ (
    .A(reset),
    .B(_141_),
    .Y(_142_)
  );
  NOR _184_ (
    .A(_138_),
    .B(_142_),
    .Y(_003_[0])
  );
  NOR _185_ (
    .A(_117_),
    .B(_139_),
    .Y(_143_)
  );
  NAND _186_ (
    .A(counter3[1]),
    .B(_138_),
    .Y(_144_)
  );
  NAND _187_ (
    .A(_117_),
    .B(_139_),
    .Y(_145_)
  );
  NAND _188_ (
    .A(reset),
    .B(_145_),
    .Y(_146_)
  );
  NOR _189_ (
    .A(_143_),
    .B(_146_),
    .Y(_003_[1])
  );
  NOR _190_ (
    .A(_118_),
    .B(_144_),
    .Y(_147_)
  );
  NAND _191_ (
    .A(_118_),
    .B(_144_),
    .Y(_148_)
  );
  NAND _192_ (
    .A(reset),
    .B(_148_),
    .Y(_149_)
  );
  NOR _193_ (
    .A(_147_),
    .B(_149_),
    .Y(_003_[2])
  );
  NAND _194_ (
    .A(counter3[3]),
    .B(_147_),
    .Y(_150_)
  );
  NOT _195_ (
    .A(_150_),
    .Y(_151_)
  );
  NOR _196_ (
    .A(counter3[3]),
    .B(_147_),
    .Y(_152_)
  );
  NOT _197_ (
    .A(_152_),
    .Y(_153_)
  );
  NAND _198_ (
    .A(reset),
    .B(_153_),
    .Y(_004_)
  );
  NOR _199_ (
    .A(_151_),
    .B(_004_),
    .Y(_003_[3])
  );
  NOR _200_ (
    .A(_119_),
    .B(_150_),
    .Y(_005_)
  );
  NAND _201_ (
    .A(_119_),
    .B(_150_),
    .Y(_006_)
  );
  NAND _202_ (
    .A(reset),
    .B(_006_),
    .Y(_007_)
  );
  NOR _203_ (
    .A(_005_),
    .B(_007_),
    .Y(_003_[4])
  );
  NOR _204_ (
    .A(_125_),
    .B(_126_),
    .Y(_008_)
  );
  NAND _205_ (
    .A(counter2[0]),
    .B(push2),
    .Y(_009_)
  );
  NOR _206_ (
    .A(counter2[0]),
    .B(push2),
    .Y(_010_)
  );
  NOT _207_ (
    .A(_010_),
    .Y(_011_)
  );
  NAND _208_ (
    .A(reset),
    .B(_011_),
    .Y(_012_)
  );
  NOR _209_ (
    .A(_008_),
    .B(_012_),
    .Y(_002_[0])
  );
  NOR _210_ (
    .A(_127_),
    .B(_009_),
    .Y(_013_)
  );
  NAND _211_ (
    .A(counter2[1]),
    .B(_008_),
    .Y(_014_)
  );
  NAND _212_ (
    .A(_127_),
    .B(_009_),
    .Y(_015_)
  );
  NAND _213_ (
    .A(reset),
    .B(_015_),
    .Y(_016_)
  );
  NOR _214_ (
    .A(_013_),
    .B(_016_),
    .Y(_002_[1])
  );
  NOR _215_ (
    .A(_128_),
    .B(_014_),
    .Y(_017_)
  );
  NAND _216_ (
    .A(_128_),
    .B(_014_),
    .Y(_018_)
  );
  NAND _217_ (
    .A(reset),
    .B(_018_),
    .Y(_019_)
  );
  NOR _218_ (
    .A(_017_),
    .B(_019_),
    .Y(_002_[2])
  );
  NAND _219_ (
    .A(counter2[3]),
    .B(_017_),
    .Y(_020_)
  );
  NOT _220_ (
    .A(_020_),
    .Y(_021_)
  );
  NOR _221_ (
    .A(counter2[3]),
    .B(_017_),
    .Y(_022_)
  );
  NOT _222_ (
    .A(_022_),
    .Y(_023_)
  );
  NAND _223_ (
    .A(reset),
    .B(_023_),
    .Y(_024_)
  );
  NOR _224_ (
    .A(_021_),
    .B(_024_),
    .Y(_002_[3])
  );
  NOR _225_ (
    .A(_130_),
    .B(_020_),
    .Y(_025_)
  );
  NAND _226_ (
    .A(_130_),
    .B(_020_),
    .Y(_026_)
  );
  NAND _227_ (
    .A(reset),
    .B(_026_),
    .Y(_027_)
  );
  NOR _228_ (
    .A(_025_),
    .B(_027_),
    .Y(_002_[4])
  );
  NOR _229_ (
    .A(_120_),
    .B(_121_),
    .Y(_028_)
  );
  NAND _230_ (
    .A(counter1[0]),
    .B(push1),
    .Y(_029_)
  );
  NOR _231_ (
    .A(counter1[0]),
    .B(push1),
    .Y(_030_)
  );
  NOT _232_ (
    .A(_030_),
    .Y(_031_)
  );
  NAND _233_ (
    .A(reset),
    .B(_031_),
    .Y(_032_)
  );
  NOR _234_ (
    .A(_028_),
    .B(_032_),
    .Y(_001_[0])
  );
  NOR _235_ (
    .A(_122_),
    .B(_029_),
    .Y(_033_)
  );
  NAND _236_ (
    .A(counter1[1]),
    .B(_028_),
    .Y(_034_)
  );
  NAND _237_ (
    .A(_122_),
    .B(_029_),
    .Y(_035_)
  );
  NAND _238_ (
    .A(reset),
    .B(_035_),
    .Y(_036_)
  );
  NOR _239_ (
    .A(_033_),
    .B(_036_),
    .Y(_001_[1])
  );
  NOR _240_ (
    .A(_123_),
    .B(_034_),
    .Y(_037_)
  );
  NAND _241_ (
    .A(_123_),
    .B(_034_),
    .Y(_038_)
  );
  NAND _242_ (
    .A(reset),
    .B(_038_),
    .Y(_039_)
  );
  NOR _243_ (
    .A(_037_),
    .B(_039_),
    .Y(_001_[2])
  );
  NAND _244_ (
    .A(counter1[3]),
    .B(_037_),
    .Y(_040_)
  );
  NOT _245_ (
    .A(_040_),
    .Y(_041_)
  );
  NOR _246_ (
    .A(counter1[3]),
    .B(_037_),
    .Y(_042_)
  );
  NOT _247_ (
    .A(_042_),
    .Y(_043_)
  );
  NAND _248_ (
    .A(reset),
    .B(_043_),
    .Y(_044_)
  );
  NOR _249_ (
    .A(_041_),
    .B(_044_),
    .Y(_001_[3])
  );
  NOR _250_ (
    .A(_124_),
    .B(_040_),
    .Y(_045_)
  );
  NAND _251_ (
    .A(_124_),
    .B(_040_),
    .Y(_046_)
  );
  NAND _252_ (
    .A(reset),
    .B(_046_),
    .Y(_047_)
  );
  NOR _253_ (
    .A(_045_),
    .B(_047_),
    .Y(_001_[4])
  );
  NOR _254_ (
    .A(_131_),
    .B(_132_),
    .Y(_048_)
  );
  NAND _255_ (
    .A(counter0[0]),
    .B(push0),
    .Y(_049_)
  );
  NOR _256_ (
    .A(counter0[0]),
    .B(push0),
    .Y(_050_)
  );
  NOT _257_ (
    .A(_050_),
    .Y(_051_)
  );
  NAND _258_ (
    .A(reset),
    .B(_051_),
    .Y(_052_)
  );
  NOR _259_ (
    .A(_048_),
    .B(_052_),
    .Y(_000_[0])
  );
  NOR _260_ (
    .A(_133_),
    .B(_049_),
    .Y(_053_)
  );
  NAND _261_ (
    .A(counter0[1]),
    .B(_048_),
    .Y(_054_)
  );
  NAND _262_ (
    .A(_133_),
    .B(_049_),
    .Y(_055_)
  );
  NAND _263_ (
    .A(reset),
    .B(_055_),
    .Y(_056_)
  );
  NOR _264_ (
    .A(_053_),
    .B(_056_),
    .Y(_000_[1])
  );
  NOR _265_ (
    .A(_134_),
    .B(_054_),
    .Y(_057_)
  );
  NAND _266_ (
    .A(_134_),
    .B(_054_),
    .Y(_058_)
  );
  NAND _267_ (
    .A(reset),
    .B(_058_),
    .Y(_059_)
  );
  NOR _268_ (
    .A(_057_),
    .B(_059_),
    .Y(_000_[2])
  );
  NAND _269_ (
    .A(counter0[3]),
    .B(_057_),
    .Y(_060_)
  );
  NOT _270_ (
    .A(_060_),
    .Y(_061_)
  );
  NOR _271_ (
    .A(counter0[3]),
    .B(_057_),
    .Y(_062_)
  );
  NOT _272_ (
    .A(_062_),
    .Y(_063_)
  );
  NAND _273_ (
    .A(reset),
    .B(_063_),
    .Y(_064_)
  );
  NOR _274_ (
    .A(_061_),
    .B(_064_),
    .Y(_000_[3])
  );
  NOR _275_ (
    .A(_135_),
    .B(_060_),
    .Y(_065_)
  );
  NAND _276_ (
    .A(_135_),
    .B(_060_),
    .Y(_066_)
  );
  NAND _277_ (
    .A(reset),
    .B(_066_),
    .Y(_067_)
  );
  NOR _278_ (
    .A(_065_),
    .B(_067_),
    .Y(_000_[4])
  );
  NOR _279_ (
    .A(_136_),
    .B(_137_),
    .Y(valid_out_synt)
  );
  NOR _280_ (
    .A(_113_),
    .B(idx[1]),
    .Y(_068_)
  );
  NAND _281_ (
    .A(_113_),
    .B(idx[1]),
    .Y(_069_)
  );
  NOT _282_ (
    .A(_069_),
    .Y(_070_)
  );
  NOR _283_ (
    .A(_068_),
    .B(_070_),
    .Y(_071_)
  );
  NAND _284_ (
    .A(counter3[0]),
    .B(_071_),
    .Y(_072_)
  );
  NOR _285_ (
    .A(_125_),
    .B(_069_),
    .Y(_073_)
  );
  NOR _286_ (
    .A(_113_),
    .B(counter1[0]),
    .Y(_074_)
  );
  NAND _287_ (
    .A(_113_),
    .B(_114_),
    .Y(_075_)
  );
  NOR _288_ (
    .A(idx[1]),
    .B(_074_),
    .Y(_076_)
  );
  NOR _289_ (
    .A(_073_),
    .B(_076_),
    .Y(_077_)
  );
  NAND _290_ (
    .A(_072_),
    .B(_077_),
    .Y(_078_)
  );
  NOR _291_ (
    .A(counter0[0]),
    .B(_075_),
    .Y(_079_)
  );
  NAND _292_ (
    .A(valid_out_synt),
    .B(_078_),
    .Y(_080_)
  );
  NOR _293_ (
    .A(_079_),
    .B(_080_),
    .Y(counter_out_synt[0])
  );
  NAND _294_ (
    .A(counter3[1]),
    .B(_071_),
    .Y(_081_)
  );
  NOR _295_ (
    .A(_127_),
    .B(_069_),
    .Y(_082_)
  );
  NOR _296_ (
    .A(_113_),
    .B(counter1[1]),
    .Y(_083_)
  );
  NOR _297_ (
    .A(idx[1]),
    .B(_083_),
    .Y(_084_)
  );
  NOR _298_ (
    .A(_082_),
    .B(_084_),
    .Y(_085_)
  );
  NAND _299_ (
    .A(_081_),
    .B(_085_),
    .Y(_086_)
  );
  NOR _300_ (
    .A(counter0[1]),
    .B(_075_),
    .Y(_087_)
  );
  NAND _301_ (
    .A(valid_out_synt),
    .B(_086_),
    .Y(_088_)
  );
  NOR _302_ (
    .A(_087_),
    .B(_088_),
    .Y(counter_out_synt[1])
  );
  NAND _303_ (
    .A(counter3[2]),
    .B(_071_),
    .Y(_089_)
  );
  NOR _304_ (
    .A(_128_),
    .B(_069_),
    .Y(_090_)
  );
  NOR _305_ (
    .A(_113_),
    .B(counter1[2]),
    .Y(_091_)
  );
  NOR _306_ (
    .A(idx[1]),
    .B(_091_),
    .Y(_092_)
  );
  NOR _307_ (
    .A(_090_),
    .B(_092_),
    .Y(_093_)
  );
  NAND _308_ (
    .A(_089_),
    .B(_093_),
    .Y(_094_)
  );
  NOR _309_ (
    .A(counter0[2]),
    .B(_075_),
    .Y(_095_)
  );
  NAND _310_ (
    .A(valid_out_synt),
    .B(_094_),
    .Y(_096_)
  );
  NOR _311_ (
    .A(_095_),
    .B(_096_),
    .Y(counter_out_synt[2])
  );
  NAND _312_ (
    .A(counter3[3]),
    .B(_071_),
    .Y(_097_)
  );
  NOR _313_ (
    .A(_129_),
    .B(_069_),
    .Y(_098_)
  );
  NOR _314_ (
    .A(_113_),
    .B(counter1[3]),
    .Y(_099_)
  );
  NOR _315_ (
    .A(idx[1]),
    .B(_099_),
    .Y(_100_)
  );
  NOR _316_ (
    .A(_098_),
    .B(_100_),
    .Y(_101_)
  );
  NAND _317_ (
    .A(_097_),
    .B(_101_),
    .Y(_102_)
  );
  NOR _318_ (
    .A(counter0[3]),
    .B(_075_),
    .Y(_103_)
  );
  NAND _319_ (
    .A(valid_out_synt),
    .B(_102_),
    .Y(_104_)
  );
  NOR _320_ (
    .A(_103_),
    .B(_104_),
    .Y(counter_out_synt[3])
  );
  NAND _321_ (
    .A(counter3[4]),
    .B(_071_),
    .Y(_105_)
  );
  NOR _322_ (
    .A(_130_),
    .B(_069_),
    .Y(_106_)
  );
  NOR _323_ (
    .A(_113_),
    .B(counter1[4]),
    .Y(_107_)
  );
  NOR _324_ (
    .A(idx[1]),
    .B(_107_),
    .Y(_108_)
  );
  NOR _325_ (
    .A(_106_),
    .B(_108_),
    .Y(_109_)
  );
  NAND _326_ (
    .A(_105_),
    .B(_109_),
    .Y(_110_)
  );
  NOR _327_ (
    .A(counter0[4]),
    .B(_075_),
    .Y(_111_)
  );
  NAND _328_ (
    .A(valid_out_synt),
    .B(_110_),
    .Y(_112_)
  );
  NOR _329_ (
    .A(_111_),
    .B(_112_),
    .Y(counter_out_synt[4])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _330_ (
    .C(clk),
    .D(_000_[0]),
    .Q(counter0[0])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _331_ (
    .C(clk),
    .D(_000_[1]),
    .Q(counter0[1])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _332_ (
    .C(clk),
    .D(_000_[2]),
    .Q(counter0[2])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _333_ (
    .C(clk),
    .D(_000_[3]),
    .Q(counter0[3])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _334_ (
    .C(clk),
    .D(_000_[4]),
    .Q(counter0[4])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _335_ (
    .C(clk),
    .D(_001_[0]),
    .Q(counter1[0])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _336_ (
    .C(clk),
    .D(_001_[1]),
    .Q(counter1[1])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _337_ (
    .C(clk),
    .D(_001_[2]),
    .Q(counter1[2])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _338_ (
    .C(clk),
    .D(_001_[3]),
    .Q(counter1[3])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _339_ (
    .C(clk),
    .D(_001_[4]),
    .Q(counter1[4])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _340_ (
    .C(clk),
    .D(_002_[0]),
    .Q(counter2[0])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _341_ (
    .C(clk),
    .D(_002_[1]),
    .Q(counter2[1])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _342_ (
    .C(clk),
    .D(_002_[2]),
    .Q(counter2[2])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _343_ (
    .C(clk),
    .D(_002_[3]),
    .Q(counter2[3])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _344_ (
    .C(clk),
    .D(_002_[4]),
    .Q(counter2[4])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _345_ (
    .C(clk),
    .D(_003_[0]),
    .Q(counter3[0])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _346_ (
    .C(clk),
    .D(_003_[1]),
    .Q(counter3[1])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _347_ (
    .C(clk),
    .D(_003_[2]),
    .Q(counter3[2])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _348_ (
    .C(clk),
    .D(_003_[3]),
    .Q(counter3[3])
  );
  (* src = "synth_contadores.v:49" *)
  DFF _349_ (
    .C(clk),
    .D(_003_[4]),
    .Q(counter3[4])
  );
endmodule

(* src = "synth_pcieTran.v:123" *)
module synth_misc(fifo4_in, fifo5_in, fifo6_in, fifo7_in, dest, fifo0_out_synt, fifo1_out_synt, fifo2_out_synt, fifo3_out_synt, demux0, reset, clk);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  (* src = "synth_pcieTran.v:127" *)
  input clk;
  (* src = "synth_pcieTran.v:126" *)
  input [1:0] demux0;
  (* src = "synth_pcieTran.v:124" *)
  output [1:0] dest;
  (* src = "synth_pcieTran.v:125" *)
  input [9:0] fifo0_out_synt;
  (* src = "synth_pcieTran.v:125" *)
  input [9:0] fifo1_out_synt;
  (* src = "synth_pcieTran.v:125" *)
  input [9:0] fifo2_out_synt;
  (* src = "synth_pcieTran.v:125" *)
  input [9:0] fifo3_out_synt;
  (* src = "synth_pcieTran.v:123" *)
  output [9:0] fifo4_in;
  (* src = "synth_pcieTran.v:123" *)
  output [9:0] fifo5_in;
  (* src = "synth_pcieTran.v:123" *)
  output [9:0] fifo6_in;
  (* src = "synth_pcieTran.v:123" *)
  output [9:0] fifo7_in;
  (* src = "synth_pcieTran.v:127" *)
  input reset;
  NOT _112_ (
    .A(demux0[1]),
    .Y(_099_)
  );
  NOT _113_ (
    .A(demux0[0]),
    .Y(_100_)
  );
  NOT _114_ (
    .A(fifo2_out_synt[0]),
    .Y(_101_)
  );
  NOT _115_ (
    .A(fifo2_out_synt[1]),
    .Y(_102_)
  );
  NOT _116_ (
    .A(fifo2_out_synt[2]),
    .Y(_103_)
  );
  NOT _117_ (
    .A(fifo2_out_synt[3]),
    .Y(_104_)
  );
  NOT _118_ (
    .A(fifo2_out_synt[4]),
    .Y(_105_)
  );
  NOT _119_ (
    .A(fifo2_out_synt[5]),
    .Y(_106_)
  );
  NOT _120_ (
    .A(fifo2_out_synt[6]),
    .Y(_107_)
  );
  NOT _121_ (
    .A(fifo2_out_synt[7]),
    .Y(_108_)
  );
  NOT _122_ (
    .A(fifo2_out_synt[8]),
    .Y(_109_)
  );
  NOT _123_ (
    .A(fifo2_out_synt[9]),
    .Y(_110_)
  );
  NOT _124_ (
    .A(reset),
    .Y(_111_)
  );
  NOR _125_ (
    .A(demux0[1]),
    .B(_100_),
    .Y(_000_)
  );
  NOR _126_ (
    .A(_099_),
    .B(demux0[0]),
    .Y(_001_)
  );
  NAND _127_ (
    .A(demux0[1]),
    .B(_100_),
    .Y(_002_)
  );
  NOR _128_ (
    .A(_000_),
    .B(_001_),
    .Y(_003_)
  );
  NAND _129_ (
    .A(fifo3_out_synt[9]),
    .B(_003_),
    .Y(_004_)
  );
  NOR _130_ (
    .A(_110_),
    .B(_002_),
    .Y(_005_)
  );
  NOR _131_ (
    .A(_100_),
    .B(fifo1_out_synt[9]),
    .Y(_006_)
  );
  NAND _132_ (
    .A(_099_),
    .B(_100_),
    .Y(_007_)
  );
  NOR _133_ (
    .A(demux0[1]),
    .B(_006_),
    .Y(_008_)
  );
  NOR _134_ (
    .A(_005_),
    .B(_008_),
    .Y(_009_)
  );
  NAND _135_ (
    .A(_004_),
    .B(_009_),
    .Y(_010_)
  );
  NOR _136_ (
    .A(fifo0_out_synt[9]),
    .B(_007_),
    .Y(_011_)
  );
  NOR _137_ (
    .A(_111_),
    .B(_011_),
    .Y(_012_)
  );
  NAND _138_ (
    .A(_010_),
    .B(_012_),
    .Y(_013_)
  );
  NOT _139_ (
    .A(_013_),
    .Y(dest[1])
  );
  NAND _140_ (
    .A(fifo3_out_synt[8]),
    .B(_003_),
    .Y(_014_)
  );
  NOR _141_ (
    .A(_109_),
    .B(_002_),
    .Y(_015_)
  );
  NOR _142_ (
    .A(_100_),
    .B(fifo1_out_synt[8]),
    .Y(_016_)
  );
  NOR _143_ (
    .A(demux0[1]),
    .B(_016_),
    .Y(_017_)
  );
  NOR _144_ (
    .A(_015_),
    .B(_017_),
    .Y(_018_)
  );
  NAND _145_ (
    .A(_014_),
    .B(_018_),
    .Y(_019_)
  );
  NOR _146_ (
    .A(fifo0_out_synt[8]),
    .B(_007_),
    .Y(_020_)
  );
  NOR _147_ (
    .A(_111_),
    .B(_020_),
    .Y(_021_)
  );
  NAND _148_ (
    .A(_019_),
    .B(_021_),
    .Y(_022_)
  );
  NOT _149_ (
    .A(_022_),
    .Y(dest[0])
  );
  NAND _150_ (
    .A(fifo3_out_synt[0]),
    .B(_003_),
    .Y(_023_)
  );
  NOR _151_ (
    .A(_101_),
    .B(_002_),
    .Y(_024_)
  );
  NOR _152_ (
    .A(_100_),
    .B(fifo1_out_synt[0]),
    .Y(_025_)
  );
  NOR _153_ (
    .A(demux0[1]),
    .B(_025_),
    .Y(_026_)
  );
  NOR _154_ (
    .A(_024_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _155_ (
    .A(_023_),
    .B(_027_),
    .Y(_028_)
  );
  NOR _156_ (
    .A(fifo0_out_synt[0]),
    .B(_007_),
    .Y(_029_)
  );
  NOR _157_ (
    .A(_111_),
    .B(_029_),
    .Y(_030_)
  );
  NAND _158_ (
    .A(_028_),
    .B(_030_),
    .Y(_031_)
  );
  NAND _159_ (
    .A(_013_),
    .B(dest[0]),
    .Y(_032_)
  );
  NOT _160_ (
    .A(_032_),
    .Y(fifo5_in[8])
  );
  NOR _161_ (
    .A(_031_),
    .B(_032_),
    .Y(fifo5_in[0])
  );
  NAND _162_ (
    .A(fifo3_out_synt[1]),
    .B(_003_),
    .Y(_033_)
  );
  NOR _163_ (
    .A(_102_),
    .B(_002_),
    .Y(_034_)
  );
  NOR _164_ (
    .A(_100_),
    .B(fifo1_out_synt[1]),
    .Y(_035_)
  );
  NOR _165_ (
    .A(demux0[1]),
    .B(_035_),
    .Y(_036_)
  );
  NOR _166_ (
    .A(_034_),
    .B(_036_),
    .Y(_037_)
  );
  NAND _167_ (
    .A(_033_),
    .B(_037_),
    .Y(_038_)
  );
  NOR _168_ (
    .A(fifo0_out_synt[1]),
    .B(_007_),
    .Y(_039_)
  );
  NOR _169_ (
    .A(_111_),
    .B(_039_),
    .Y(_040_)
  );
  NAND _170_ (
    .A(_038_),
    .B(_040_),
    .Y(_041_)
  );
  NOR _171_ (
    .A(_032_),
    .B(_041_),
    .Y(fifo5_in[1])
  );
  NAND _172_ (
    .A(fifo3_out_synt[2]),
    .B(_003_),
    .Y(_042_)
  );
  NOR _173_ (
    .A(_103_),
    .B(_002_),
    .Y(_043_)
  );
  NOR _174_ (
    .A(_100_),
    .B(fifo1_out_synt[2]),
    .Y(_044_)
  );
  NOR _175_ (
    .A(demux0[1]),
    .B(_044_),
    .Y(_045_)
  );
  NOR _176_ (
    .A(_043_),
    .B(_045_),
    .Y(_046_)
  );
  NAND _177_ (
    .A(_042_),
    .B(_046_),
    .Y(_047_)
  );
  NOR _178_ (
    .A(fifo0_out_synt[2]),
    .B(_007_),
    .Y(_048_)
  );
  NOR _179_ (
    .A(_111_),
    .B(_048_),
    .Y(_049_)
  );
  NAND _180_ (
    .A(_047_),
    .B(_049_),
    .Y(_050_)
  );
  NOR _181_ (
    .A(_032_),
    .B(_050_),
    .Y(fifo5_in[2])
  );
  NAND _182_ (
    .A(fifo3_out_synt[3]),
    .B(_003_),
    .Y(_051_)
  );
  NOR _183_ (
    .A(_104_),
    .B(_002_),
    .Y(_052_)
  );
  NOR _184_ (
    .A(_100_),
    .B(fifo1_out_synt[3]),
    .Y(_053_)
  );
  NOR _185_ (
    .A(demux0[1]),
    .B(_053_),
    .Y(_054_)
  );
  NOR _186_ (
    .A(_052_),
    .B(_054_),
    .Y(_055_)
  );
  NAND _187_ (
    .A(_051_),
    .B(_055_),
    .Y(_056_)
  );
  NOR _188_ (
    .A(fifo0_out_synt[3]),
    .B(_007_),
    .Y(_057_)
  );
  NOR _189_ (
    .A(_111_),
    .B(_057_),
    .Y(_058_)
  );
  NAND _190_ (
    .A(_056_),
    .B(_058_),
    .Y(_059_)
  );
  NOR _191_ (
    .A(_032_),
    .B(_059_),
    .Y(fifo5_in[3])
  );
  NAND _192_ (
    .A(fifo3_out_synt[4]),
    .B(_003_),
    .Y(_060_)
  );
  NOR _193_ (
    .A(_105_),
    .B(_002_),
    .Y(_061_)
  );
  NOR _194_ (
    .A(_100_),
    .B(fifo1_out_synt[4]),
    .Y(_062_)
  );
  NOR _195_ (
    .A(demux0[1]),
    .B(_062_),
    .Y(_063_)
  );
  NOR _196_ (
    .A(_061_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _197_ (
    .A(_060_),
    .B(_064_),
    .Y(_065_)
  );
  NOR _198_ (
    .A(fifo0_out_synt[4]),
    .B(_007_),
    .Y(_066_)
  );
  NOR _199_ (
    .A(_111_),
    .B(_066_),
    .Y(_067_)
  );
  NAND _200_ (
    .A(_065_),
    .B(_067_),
    .Y(_068_)
  );
  NOR _201_ (
    .A(_032_),
    .B(_068_),
    .Y(fifo5_in[4])
  );
  NAND _202_ (
    .A(fifo3_out_synt[5]),
    .B(_003_),
    .Y(_069_)
  );
  NOR _203_ (
    .A(_106_),
    .B(_002_),
    .Y(_070_)
  );
  NOR _204_ (
    .A(_100_),
    .B(fifo1_out_synt[5]),
    .Y(_071_)
  );
  NOR _205_ (
    .A(demux0[1]),
    .B(_071_),
    .Y(_072_)
  );
  NOR _206_ (
    .A(_070_),
    .B(_072_),
    .Y(_073_)
  );
  NAND _207_ (
    .A(_069_),
    .B(_073_),
    .Y(_074_)
  );
  NOR _208_ (
    .A(fifo0_out_synt[5]),
    .B(_007_),
    .Y(_075_)
  );
  NOR _209_ (
    .A(_111_),
    .B(_075_),
    .Y(_076_)
  );
  NAND _210_ (
    .A(_074_),
    .B(_076_),
    .Y(_077_)
  );
  NOR _211_ (
    .A(_032_),
    .B(_077_),
    .Y(fifo5_in[5])
  );
  NAND _212_ (
    .A(fifo3_out_synt[6]),
    .B(_003_),
    .Y(_078_)
  );
  NOR _213_ (
    .A(_107_),
    .B(_002_),
    .Y(_079_)
  );
  NOR _214_ (
    .A(_100_),
    .B(fifo1_out_synt[6]),
    .Y(_080_)
  );
  NOR _215_ (
    .A(demux0[1]),
    .B(_080_),
    .Y(_081_)
  );
  NOR _216_ (
    .A(_079_),
    .B(_081_),
    .Y(_082_)
  );
  NAND _217_ (
    .A(_078_),
    .B(_082_),
    .Y(_083_)
  );
  NOR _218_ (
    .A(fifo0_out_synt[6]),
    .B(_007_),
    .Y(_084_)
  );
  NOR _219_ (
    .A(_111_),
    .B(_084_),
    .Y(_085_)
  );
  NAND _220_ (
    .A(_083_),
    .B(_085_),
    .Y(_086_)
  );
  NOR _221_ (
    .A(_032_),
    .B(_086_),
    .Y(fifo5_in[6])
  );
  NAND _222_ (
    .A(fifo3_out_synt[7]),
    .B(_003_),
    .Y(_087_)
  );
  NOR _223_ (
    .A(_108_),
    .B(_002_),
    .Y(_088_)
  );
  NOR _224_ (
    .A(_100_),
    .B(fifo1_out_synt[7]),
    .Y(_089_)
  );
  NOR _225_ (
    .A(demux0[1]),
    .B(_089_),
    .Y(_090_)
  );
  NOR _226_ (
    .A(_088_),
    .B(_090_),
    .Y(_091_)
  );
  NAND _227_ (
    .A(_087_),
    .B(_091_),
    .Y(_092_)
  );
  NOR _228_ (
    .A(fifo0_out_synt[7]),
    .B(_007_),
    .Y(_093_)
  );
  NOR _229_ (
    .A(_111_),
    .B(_093_),
    .Y(_094_)
  );
  NAND _230_ (
    .A(_092_),
    .B(_094_),
    .Y(_095_)
  );
  NOR _231_ (
    .A(_032_),
    .B(_095_),
    .Y(fifo5_in[7])
  );
  NAND _232_ (
    .A(dest[1]),
    .B(dest[0]),
    .Y(_096_)
  );
  NOT _233_ (
    .A(_096_),
    .Y(fifo7_in[8])
  );
  NOR _234_ (
    .A(_031_),
    .B(_096_),
    .Y(fifo7_in[0])
  );
  NOR _235_ (
    .A(_041_),
    .B(_096_),
    .Y(fifo7_in[1])
  );
  NOR _236_ (
    .A(_050_),
    .B(_096_),
    .Y(fifo7_in[2])
  );
  NOR _237_ (
    .A(_059_),
    .B(_096_),
    .Y(fifo7_in[3])
  );
  NOR _238_ (
    .A(_068_),
    .B(_096_),
    .Y(fifo7_in[4])
  );
  NOR _239_ (
    .A(_077_),
    .B(_096_),
    .Y(fifo7_in[5])
  );
  NOR _240_ (
    .A(_086_),
    .B(_096_),
    .Y(fifo7_in[6])
  );
  NOR _241_ (
    .A(_095_),
    .B(_096_),
    .Y(fifo7_in[7])
  );
  NAND _242_ (
    .A(dest[1]),
    .B(_022_),
    .Y(_097_)
  );
  NOT _243_ (
    .A(_097_),
    .Y(fifo6_in[9])
  );
  NOR _244_ (
    .A(_031_),
    .B(_097_),
    .Y(fifo6_in[0])
  );
  NOR _245_ (
    .A(_041_),
    .B(_097_),
    .Y(fifo6_in[1])
  );
  NOR _246_ (
    .A(_050_),
    .B(_097_),
    .Y(fifo6_in[2])
  );
  NOR _247_ (
    .A(_059_),
    .B(_097_),
    .Y(fifo6_in[3])
  );
  NOR _248_ (
    .A(_068_),
    .B(_097_),
    .Y(fifo6_in[4])
  );
  NOR _249_ (
    .A(_077_),
    .B(_097_),
    .Y(fifo6_in[5])
  );
  NOR _250_ (
    .A(_086_),
    .B(_097_),
    .Y(fifo6_in[6])
  );
  NOR _251_ (
    .A(_095_),
    .B(_097_),
    .Y(fifo6_in[7])
  );
  NAND _252_ (
    .A(_013_),
    .B(_022_),
    .Y(_098_)
  );
  NOR _253_ (
    .A(_031_),
    .B(_098_),
    .Y(fifo4_in[0])
  );
  NOR _254_ (
    .A(_041_),
    .B(_098_),
    .Y(fifo4_in[1])
  );
  NOR _255_ (
    .A(_050_),
    .B(_098_),
    .Y(fifo4_in[2])
  );
  NOR _256_ (
    .A(_059_),
    .B(_098_),
    .Y(fifo4_in[3])
  );
  NOR _257_ (
    .A(_068_),
    .B(_098_),
    .Y(fifo4_in[4])
  );
  NOR _258_ (
    .A(_077_),
    .B(_098_),
    .Y(fifo4_in[5])
  );
  NOR _259_ (
    .A(_086_),
    .B(_098_),
    .Y(fifo4_in[6])
  );
  NOR _260_ (
    .A(_095_),
    .B(_098_),
    .Y(fifo4_in[7])
  );
  NOT _261_ (
    .A(_096_),
    .Y(fifo7_in[9])
  );
  assign fifo4_in[9:8] = 2'h0;
  assign fifo5_in[9] = 1'h0;
  assign fifo6_in[8] = 1'h0;
endmodule

(* top =  1  *)
(* src = "synth_pcieTran.v:5" *)
module synth_pcieTran(fifo4_out_synt, fifo5_out_synt, fifo6_out_synt, fifo7_out_synt, counter_out_synt, valid_out_synt, data0_in, data1_in, data2_in, data3_in, push0, push1, push2, push3, pop4, pop5, pop6, pop7, clk, reset, init, req, limit_low, limit_high, idx);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  (* src = "synth_pcieTran.v:27" *)
  wire APOPS;
  (* src = "synth_pcieTran.v:64" *)
  wire a;
  (* src = "synth_pcieTran.v:26" *)
  wire afull4;
  (* src = "synth_pcieTran.v:26" *)
  wire afull5;
  (* src = "synth_pcieTran.v:26" *)
  wire afull6;
  (* src = "synth_pcieTran.v:26" *)
  wire afull7;
  (* src = "synth_pcieTran.v:13" *)
  input clk;
  (* src = "synth_pcieTran.v:7" *)
  output [4:0] counter_out_synt;
  (* src = "synth_pcieTran.v:9" *)
  input [9:0] data0_in;
  (* src = "synth_pcieTran.v:9" *)
  input [9:0] data1_in;
  (* src = "synth_pcieTran.v:10" *)
  input [9:0] data2_in;
  (* src = "synth_pcieTran.v:10" *)
  input [9:0] data3_in;
  (* src = "synth_pcieTran.v:19" *)
  wire [1:0] demux0;
  (* src = "synth_pcieTran.v:23" *)
  wire [1:0] dest;
  (* src = "synth_pcieTran.v:21" *)
  wire emptys;
  (* src = "synth_pcieTran.v:55" *)
  (* unused_bits = "0" *)
  wire errorfifo0;
  (* src = "synth_pcieTran.v:55" *)
  (* unused_bits = "0" *)
  wire errorfifo1;
  (* src = "synth_pcieTran.v:55" *)
  (* unused_bits = "0" *)
  wire errorfifo2;
  (* src = "synth_pcieTran.v:55" *)
  (* unused_bits = "0" *)
  wire errorfifo3;
  (* src = "synth_pcieTran.v:56" *)
  (* unused_bits = "0" *)
  wire errorfifo4;
  (* src = "synth_pcieTran.v:56" *)
  (* unused_bits = "0" *)
  wire errorfifo5;
  (* src = "synth_pcieTran.v:56" *)
  (* unused_bits = "0" *)
  wire errorfifo6;
  (* src = "synth_pcieTran.v:56" *)
  (* unused_bits = "0" *)
  wire errorfifo7;
  (* src = "synth_pcieTran.v:51" *)
  wire [9:0] fifo0_out_synt;
  (* src = "synth_pcieTran.v:53" *)
  wire fifo0empty;
  (* src = "synth_pcieTran.v:52" *)
  (* unused_bits = "0" *)
  wire fifo0full;
  (* src = "synth_pcieTran.v:51" *)
  wire [9:0] fifo1_out_synt;
  (* src = "synth_pcieTran.v:53" *)
  wire fifo1empty;
  (* src = "synth_pcieTran.v:52" *)
  (* unused_bits = "0" *)
  wire fifo1full;
  (* src = "synth_pcieTran.v:51" *)
  wire [9:0] fifo2_out_synt;
  (* src = "synth_pcieTran.v:53" *)
  wire fifo2empty;
  (* src = "synth_pcieTran.v:52" *)
  (* unused_bits = "0" *)
  wire fifo2full;
  (* src = "synth_pcieTran.v:51" *)
  wire [9:0] fifo3_out_synt;
  (* src = "synth_pcieTran.v:53" *)
  wire fifo3empty;
  (* src = "synth_pcieTran.v:52" *)
  (* unused_bits = "0" *)
  wire fifo3full;
  (* src = "synth_pcieTran.v:94" *)
  wire [9:0] fifo4_in;
  (* src = "synth_pcieTran.v:5" *)
  output [9:0] fifo4_out_synt;
  (* src = "synth_pcieTran.v:54" *)
  wire fifo4empty;
  (* src = "synth_pcieTran.v:94" *)
  wire [9:0] fifo5_in;
  (* src = "synth_pcieTran.v:5" *)
  output [9:0] fifo5_out_synt;
  (* src = "synth_pcieTran.v:54" *)
  wire fifo5empty;
  (* src = "synth_pcieTran.v:94" *)
  wire [9:0] fifo6_in;
  (* src = "synth_pcieTran.v:6" *)
  output [9:0] fifo6_out_synt;
  (* src = "synth_pcieTran.v:54" *)
  wire fifo6empty;
  (* src = "synth_pcieTran.v:94" *)
  wire [9:0] fifo7_in;
  (* src = "synth_pcieTran.v:6" *)
  output [9:0] fifo7_out_synt;
  (* src = "synth_pcieTran.v:54" *)
  wire fifo7empty;
  (* src = "synth_pcieTran.v:17" *)
  wire idle;
  (* src = "synth_pcieTran.v:15" *)
  input [1:0] idx;
  (* src = "synth_pcieTran.v:13" *)
  input init;
  (* src = "synth_pcieTran.v:14" *)
  input [2:0] limit_high;
  (* src = "synth_pcieTran.v:18" *)
  wire [2:0] limit_high_mach;
  (* src = "synth_pcieTran.v:14" *)
  input [2:0] limit_low;
  (* src = "synth_pcieTran.v:18" *)
  wire [2:0] limit_low_mach;
  (* src = "synth_pcieTran.v:57" *)
  wire pop0;
  (* src = "synth_pcieTran.v:57" *)
  wire pop1;
  (* src = "synth_pcieTran.v:57" *)
  wire pop2;
  (* src = "synth_pcieTran.v:57" *)
  wire pop3;
  (* src = "synth_pcieTran.v:12" *)
  input pop4;
  (* src = "synth_pcieTran.v:12" *)
  input pop5;
  (* src = "synth_pcieTran.v:12" *)
  input pop6;
  (* src = "synth_pcieTran.v:12" *)
  input pop7;
  (* src = "synth_pcieTran.v:11" *)
  input push0;
  (* src = "synth_pcieTran.v:11" *)
  input push1;
  (* src = "synth_pcieTran.v:11" *)
  input push2;
  (* src = "synth_pcieTran.v:11" *)
  input push3;
  (* src = "synth_pcieTran.v:89" *)
  wire push4;
  (* src = "synth_pcieTran.v:89" *)
  wire push5;
  (* src = "synth_pcieTran.v:89" *)
  wire push6;
  (* src = "synth_pcieTran.v:89" *)
  wire push7;
  (* src = "synth_pcieTran.v:13" *)
  input req;
  (* src = "synth_pcieTran.v:13" *)
  input reset;
  (* src = "synth_pcieTran.v:17" *)
  wire reset_system;
  (* src = "synth_pcieTran.v:64" *)
  wire reset_system2;
  (* src = "synth_pcieTran.v:33" *)
  wire ret;
  (* src = "synth_pcieTran.v:28" *)
  wire retornador;
  (* src = "synth_pcieTran.v:8" *)
  output valid_out_synt;
  NOR _13_ (
    .A(afull5),
    .B(afull6),
    .Y(_00_)
  );
  NOR _14_ (
    .A(afull4),
    .B(afull7),
    .Y(_01_)
  );
  NAND _15_ (
    .A(_00_),
    .B(_01_),
    .Y(_02_)
  );
  NAND _16_ (
    .A(retornador),
    .B(_02_),
    .Y(_03_)
  );
  NOT _17_ (
    .A(_03_),
    .Y(ret)
  );
  NOR _18_ (
    .A(pop0),
    .B(pop1),
    .Y(_04_)
  );
  NOR _19_ (
    .A(pop2),
    .B(pop3),
    .Y(_05_)
  );
  NAND _20_ (
    .A(_04_),
    .B(_05_),
    .Y(APOPS)
  );
  NAND _21_ (
    .A(fifo4empty),
    .B(fifo5empty),
    .Y(_06_)
  );
  NAND _22_ (
    .A(fifo6empty),
    .B(fifo7empty),
    .Y(_07_)
  );
  NOR _23_ (
    .A(_06_),
    .B(_07_),
    .Y(_08_)
  );
  NAND _24_ (
    .A(fifo0empty),
    .B(fifo1empty),
    .Y(_09_)
  );
  NAND _25_ (
    .A(fifo2empty),
    .B(fifo3empty),
    .Y(_10_)
  );
  NOR _26_ (
    .A(_09_),
    .B(_10_),
    .Y(_11_)
  );
  NAND _27_ (
    .A(_08_),
    .B(_11_),
    .Y(_12_)
  );
  NOT _28_ (
    .A(_12_),
    .Y(emptys)
  );
  (* src = "synth_pcieTran.v:66" *)
  DFF _29_ (
    .C(clk),
    .D(a),
    .Q(reset_system2)
  );
  (* src = "synth_pcieTran.v:66" *)
  DFF _30_ (
    .C(clk),
    .D(reset_system),
    .Q(a)
  );
  (* src = "synth_pcieTran.v:30" *)
  DFF _31_ (
    .C(clk),
    .D(APOPS),
    .Q(retornador)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:89" *)
  synth_arbitro ARBITRO (
    .afull0(afull4),
    .afull1(afull5),
    .afull2(afull6),
    .afull3(afull7),
    .clk(clk),
    .demux0_out_synt(demux0),
    .dest(dest),
    .empty0(fifo0empty),
    .empty1(fifo1empty),
    .empty2(fifo2empty),
    .empty3(fifo3empty),
    .pop0_out_synt(pop0),
    .pop1_out_synt(pop1),
    .pop2_out_synt(pop2),
    .pop3_out_synt(pop3),
    .push0_out_synt(push4),
    .push1_out_synt(push5),
    .push2_out_synt(push6),
    .push3_out_synt(push7),
    .reset(reset_system)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:118" *)
  synth_contadores COUNTERS (
    .clk(clk),
    .counter_out_synt(counter_out_synt),
    .idle(idle),
    .idx(idx),
    .push0(push4),
    .push1(push5),
    .push2(push6),
    .push3(push7),
    .req(req),
    .reset(reset_system2),
    .valid_out_synt(valid_out_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:73" *)
  synth_xfifo FIFO0 (
    .clk(clk),
    .error_fifo_out_synt(errorfifo0),
    .fifo_data_in(data0_in),
    .fifo_data_out_synt(fifo0_out_synt),
    .fifo_empty_out_synt(fifo0empty),
    .fifo_full_out_synt(fifo0full),
    .fifo_read(pop0),
    .fifo_write(push0),
    .high_limit(limit_high_mach),
    .low_limit(limit_low_mach),
    .reset(reset_system),
    .ret(1'h0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:76" *)
  synth_xfifo FIFO1 (
    .clk(clk),
    .error_fifo_out_synt(errorfifo1),
    .fifo_data_in(data1_in),
    .fifo_data_out_synt(fifo1_out_synt),
    .fifo_empty_out_synt(fifo1empty),
    .fifo_full_out_synt(fifo1full),
    .fifo_read(pop1),
    .fifo_write(push1),
    .high_limit(limit_high_mach),
    .low_limit(limit_low_mach),
    .reset(reset_system),
    .ret(1'h0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:79" *)
  synth_xfifo FIFO2 (
    .clk(clk),
    .error_fifo_out_synt(errorfifo2),
    .fifo_data_in(data2_in),
    .fifo_data_out_synt(fifo2_out_synt),
    .fifo_empty_out_synt(fifo2empty),
    .fifo_full_out_synt(fifo2full),
    .fifo_read(pop2),
    .fifo_write(push2),
    .high_limit(limit_high_mach),
    .low_limit(limit_low_mach),
    .reset(reset_system),
    .ret(1'h0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:82" *)
  synth_xfifo FIFO3 (
    .clk(clk),
    .error_fifo_out_synt(errorfifo3),
    .fifo_data_in(data3_in),
    .fifo_data_out_synt(fifo3_out_synt),
    .fifo_empty_out_synt(fifo3empty),
    .fifo_full_out_synt(fifo3full),
    .fifo_read(pop3),
    .fifo_write(push3),
    .high_limit(limit_high_mach),
    .low_limit(limit_low_mach),
    .reset(reset_system),
    .ret(ret)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:103" *)
  synth_xfifo FIFO4 (
    .clk(clk),
    .error_fifo_out_synt(errorfifo4),
    .fifo_data_in(fifo4_in),
    .fifo_data_out_synt(fifo4_out_synt),
    .fifo_empty_out_synt(fifo4empty),
    .fifo_full_out_synt(afull4),
    .fifo_read(pop4),
    .fifo_write(push4),
    .high_limit(limit_high_mach),
    .low_limit(limit_low_mach),
    .reset(reset_system2),
    .ret(1'h0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:106" *)
  synth_xfifo FIFO5 (
    .clk(clk),
    .error_fifo_out_synt(errorfifo5),
    .fifo_data_in(fifo5_in),
    .fifo_data_out_synt(fifo5_out_synt),
    .fifo_empty_out_synt(fifo5empty),
    .fifo_full_out_synt(afull5),
    .fifo_read(pop5),
    .fifo_write(push5),
    .high_limit(limit_high_mach),
    .low_limit(limit_low_mach),
    .reset(reset_system2),
    .ret(1'h0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:109" *)
  synth_xfifo FIFO6 (
    .clk(clk),
    .error_fifo_out_synt(errorfifo6),
    .fifo_data_in(fifo6_in),
    .fifo_data_out_synt(fifo6_out_synt),
    .fifo_empty_out_synt(fifo6empty),
    .fifo_full_out_synt(afull6),
    .fifo_read(pop6),
    .fifo_write(push6),
    .high_limit(limit_high_mach),
    .low_limit(limit_low_mach),
    .reset(reset_system2),
    .ret(1'h0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:112" *)
  synth_xfifo FIFO7 (
    .clk(clk),
    .error_fifo_out_synt(errorfifo7),
    .fifo_data_in(fifo7_in),
    .fifo_data_out_synt(fifo7_out_synt),
    .fifo_empty_out_synt(fifo7empty),
    .fifo_full_out_synt(afull7),
    .fifo_read(pop7),
    .fifo_write(push7),
    .high_limit(limit_high_mach),
    .low_limit(limit_low_mach),
    .reset(reset_system2),
    .ret(1'h0)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:86" *)
  synth_satanic_machine MACH (
    .clk(clk),
    .emptys(emptys),
    .idle_out_synt(idle),
    .init(init),
    .limit_high(limit_high),
    .limit_high_out_synt(limit_high_mach),
    .limit_low(limit_low),
    .limit_low_out_synt(limit_low_mach),
    .reset(reset),
    .reset_out_synt(reset_system)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_pcieTran.v:96" *)
  synth_misc MISCELANEO (
    .clk(clk),
    .demux0(demux0),
    .dest(dest),
    .fifo0_out_synt(fifo0_out_synt),
    .fifo1_out_synt(fifo1_out_synt),
    .fifo2_out_synt(fifo2_out_synt),
    .fifo3_out_synt(fifo3_out_synt),
    .fifo4_in(fifo4_in),
    .fifo5_in(fifo5_in),
    .fifo6_in(fifo6_in),
    .fifo7_in(fifo7_in),
    .reset(reset_system)
  );
endmodule

(* src = "synth_pcieTran.v:193" *)
module synth_satanic_machine(reset_out_synt, idle_out_synt, limit_low_out_synt, limit_high_out_synt, limit_low, limit_high, clk, reset, init, emptys);
  (* src = "synth_pcieTran.v:269" *)
  wire [2:0] _00_;
  (* src = "synth_pcieTran.v:269" *)
  wire [2:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  (* src = "synth_pcieTran.v:196" *)
  input clk;
  (* src = "synth_pcieTran.v:196" *)
  input emptys;
  (* src = "synth_pcieTran.v:193" *)
  output idle_out_synt;
  (* src = "synth_pcieTran.v:196" *)
  input init;
  (* src = "synth_pcieTran.v:195" *)
  input [2:0] limit_high;
  (* src = "synth_pcieTran.v:194" *)
  output [2:0] limit_high_out_synt;
  (* src = "synth_pcieTran.v:195" *)
  input [2:0] limit_low;
  (* src = "synth_pcieTran.v:194" *)
  output [2:0] limit_low_out_synt;
  (* src = "synth_pcieTran.v:198" *)
  wire [3:0] next_state;
  (* src = "synth_pcieTran.v:196" *)
  input reset;
  (* src = "synth_pcieTran.v:193" *)
  output reset_out_synt;
  (* src = "synth_pcieTran.v:198" *)
  wire [3:0] state;
  NOT _37_ (
    .A(init),
    .Y(_02_)
  );
  NOT _38_ (
    .A(reset),
    .Y(_03_)
  );
  NOR _39_ (
    .A(state[2]),
    .B(state[3]),
    .Y(_04_)
  );
  NAND _40_ (
    .A(state[0]),
    .B(_04_),
    .Y(_05_)
  );
  NOR _41_ (
    .A(state[1]),
    .B(_05_),
    .Y(_06_)
  );
  NOR _42_ (
    .A(init),
    .B(_06_),
    .Y(_07_)
  );
  NAND _43_ (
    .A(state[1]),
    .B(_04_),
    .Y(_08_)
  );
  NOR _44_ (
    .A(state[0]),
    .B(_08_),
    .Y(_09_)
  );
  NOR _45_ (
    .A(_06_),
    .B(_09_),
    .Y(_10_)
  );
  NOR _46_ (
    .A(_07_),
    .B(_10_),
    .Y(_11_)
  );
  NOT _47_ (
    .A(_11_),
    .Y(reset_out_synt)
  );
  NOR _48_ (
    .A(state[0]),
    .B(state[1]),
    .Y(_12_)
  );
  NAND _49_ (
    .A(state[2]),
    .B(_12_),
    .Y(_13_)
  );
  NOR _50_ (
    .A(state[3]),
    .B(_13_),
    .Y(idle_out_synt)
  );
  NAND _51_ (
    .A(limit_low[0]),
    .B(init),
    .Y(_14_)
  );
  NAND _52_ (
    .A(limit_low_out_synt[0]),
    .B(_02_),
    .Y(_15_)
  );
  NAND _53_ (
    .A(_14_),
    .B(_15_),
    .Y(_01_[0])
  );
  NAND _54_ (
    .A(init),
    .B(limit_low[1]),
    .Y(_16_)
  );
  NAND _55_ (
    .A(_02_),
    .B(limit_low_out_synt[1]),
    .Y(_17_)
  );
  NAND _56_ (
    .A(_16_),
    .B(_17_),
    .Y(_01_[1])
  );
  NAND _57_ (
    .A(init),
    .B(limit_low[2]),
    .Y(_18_)
  );
  NAND _58_ (
    .A(_02_),
    .B(limit_low_out_synt[2]),
    .Y(_19_)
  );
  NAND _59_ (
    .A(_18_),
    .B(_19_),
    .Y(_01_[2])
  );
  NAND _60_ (
    .A(init),
    .B(limit_high[0]),
    .Y(_20_)
  );
  NAND _61_ (
    .A(_02_),
    .B(limit_high_out_synt[0]),
    .Y(_21_)
  );
  NAND _62_ (
    .A(_20_),
    .B(_21_),
    .Y(_00_[0])
  );
  NAND _63_ (
    .A(init),
    .B(limit_high[1]),
    .Y(_22_)
  );
  NAND _64_ (
    .A(_02_),
    .B(limit_high_out_synt[1]),
    .Y(_23_)
  );
  NAND _65_ (
    .A(_22_),
    .B(_23_),
    .Y(_00_[1])
  );
  NAND _66_ (
    .A(init),
    .B(limit_high[2]),
    .Y(_24_)
  );
  NAND _67_ (
    .A(_02_),
    .B(limit_high_out_synt[2]),
    .Y(_25_)
  );
  NAND _68_ (
    .A(_24_),
    .B(_25_),
    .Y(_00_[2])
  );
  NAND _69_ (
    .A(state[2]),
    .B(state[3]),
    .Y(_26_)
  );
  NAND _70_ (
    .A(_12_),
    .B(_26_),
    .Y(_27_)
  );
  NOR _71_ (
    .A(_04_),
    .B(_27_),
    .Y(_28_)
  );
  NOT _72_ (
    .A(_28_),
    .Y(_29_)
  );
  NAND _73_ (
    .A(_10_),
    .B(_29_),
    .Y(_30_)
  );
  NAND _74_ (
    .A(reset),
    .B(_30_),
    .Y(next_state[0])
  );
  NOR _75_ (
    .A(_07_),
    .B(next_state[0]),
    .Y(next_state[1])
  );
  NOR _76_ (
    .A(init),
    .B(_03_),
    .Y(_31_)
  );
  NAND _77_ (
    .A(_02_),
    .B(reset),
    .Y(_32_)
  );
  NAND _78_ (
    .A(emptys),
    .B(_28_),
    .Y(_33_)
  );
  NOT _79_ (
    .A(_33_),
    .Y(_34_)
  );
  NOR _80_ (
    .A(_09_),
    .B(_34_),
    .Y(_35_)
  );
  NOR _81_ (
    .A(_32_),
    .B(_35_),
    .Y(next_state[2])
  );
  NAND _82_ (
    .A(_28_),
    .B(_31_),
    .Y(_36_)
  );
  NOR _83_ (
    .A(emptys),
    .B(_36_),
    .Y(next_state[3])
  );
  (* src = "synth_pcieTran.v:269" *)
  DFF _84_ (
    .C(clk),
    .D(_01_[0]),
    .Q(limit_low_out_synt[0])
  );
  (* src = "synth_pcieTran.v:269" *)
  DFF _85_ (
    .C(clk),
    .D(_01_[1]),
    .Q(limit_low_out_synt[1])
  );
  (* src = "synth_pcieTran.v:269" *)
  DFF _86_ (
    .C(clk),
    .D(_01_[2]),
    .Q(limit_low_out_synt[2])
  );
  (* src = "synth_pcieTran.v:269" *)
  DFF _87_ (
    .C(clk),
    .D(_00_[0]),
    .Q(limit_high_out_synt[0])
  );
  (* src = "synth_pcieTran.v:269" *)
  DFF _88_ (
    .C(clk),
    .D(_00_[1]),
    .Q(limit_high_out_synt[1])
  );
  (* src = "synth_pcieTran.v:269" *)
  DFF _89_ (
    .C(clk),
    .D(_00_[2]),
    .Q(limit_high_out_synt[2])
  );
  (* src = "synth_pcieTran.v:205" *)
  DFF _90_ (
    .C(clk),
    .D(next_state[0]),
    .Q(state[0])
  );
  (* src = "synth_pcieTran.v:205" *)
  DFF _91_ (
    .C(clk),
    .D(next_state[1]),
    .Q(state[1])
  );
  (* src = "synth_pcieTran.v:205" *)
  DFF _92_ (
    .C(clk),
    .D(next_state[2]),
    .Q(state[2])
  );
  (* src = "synth_pcieTran.v:205" *)
  DFF _93_ (
    .C(clk),
    .D(next_state[3]),
    .Q(state[3])
  );
endmodule

(* dynports =  1  *)
(* src = "synth_xfifo.v:7" *)
module synth_xfifo(fifo_data_out_synt, fifo_full_out_synt, fifo_empty_out_synt, error_fifo_out_synt, fifo_data_in, high_limit, low_limit, fifo_write, fifo_read, clk, reset, ret);
  (* src = "synth_xfifo.v:88" *)
  wire _000_;
  (* src = "synth_xfifo.v:173" *)
  wire [2:0] _001_;
  (* src = "synth_xfifo.v:110" *)
  wire [7:0] _002_;
  (* src = "synth_xfifo.v:159" *)
  wire [2:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  (* src = "synth_xfifo.v:15" *)
  input clk;
  (* src = "synth_xfifo.v:11" *)
  output error_fifo_out_synt;
  (* src = "synth_xfifo.v:12" *)
  input [9:0] fifo_data_in;
  (* src = "synth_xfifo.v:9" *)
  output [9:0] fifo_data_out_synt;
  (* src = "synth_xfifo.v:10" *)
  output fifo_empty_out_synt;
  (* src = "synth_xfifo.v:10" *)
  output fifo_full_out_synt;
  (* src = "synth_xfifo.v:14" *)
  input fifo_read;
  (* src = "synth_xfifo.v:14" *)
  input fifo_write;
  (* src = "synth_xfifo.v:13" *)
  input [2:0] high_limit;
  (* src = "synth_xfifo.v:13" *)
  input [2:0] low_limit;
  (* src = "synth_xfifo.v:19" *)
  wire [2:0] read_ptr;
  (* src = "synth_xfifo.v:20" *)
  wire [2:0] read_ptr_r;
  (* src = "synth_xfifo.v:15" *)
  input reset;
  (* src = "synth_xfifo.v:15" *)
  input ret;
  (* src = "synth_xfifo.v:21" *)
  wire [7:0] vector;
  (* src = "synth_xfifo.v:19" *)
  wire [2:0] write_ptr;
  (* src = "synth_xfifo.v:20" *)
  wire [2:0] write_ptr_r;
  NOT _162_ (
    .A(read_ptr_r[2]),
    .Y(_108_)
  );
  NOT _163_ (
    .A(write_ptr_r[2]),
    .Y(_109_)
  );
  NOT _164_ (
    .A(read_ptr_r[1]),
    .Y(_110_)
  );
  NOT _165_ (
    .A(write_ptr_r[1]),
    .Y(_111_)
  );
  NOT _166_ (
    .A(read_ptr_r[0]),
    .Y(_112_)
  );
  NOT _167_ (
    .A(write_ptr_r[0]),
    .Y(_113_)
  );
  NOT _168_ (
    .A(high_limit[1]),
    .Y(_114_)
  );
  NOT _169_ (
    .A(high_limit[2]),
    .Y(_115_)
  );
  NOT _170_ (
    .A(fifo_read),
    .Y(_116_)
  );
  NOT _171_ (
    .A(fifo_write),
    .Y(_117_)
  );
  NOT _172_ (
    .A(ret),
    .Y(_118_)
  );
  NOT _173_ (
    .A(reset),
    .Y(_119_)
  );
  NOR _174_ (
    .A(fifo_read),
    .B(ret),
    .Y(_120_)
  );
  NAND _175_ (
    .A(_112_),
    .B(_120_),
    .Y(_121_)
  );
  NOR _176_ (
    .A(_112_),
    .B(_120_),
    .Y(_122_)
  );
  NAND _177_ (
    .A(reset),
    .B(_121_),
    .Y(_123_)
  );
  NOR _178_ (
    .A(_122_),
    .B(_123_),
    .Y(_001_[0])
  );
  NOR _179_ (
    .A(_112_),
    .B(fifo_read),
    .Y(_124_)
  );
  NOR _180_ (
    .A(fifo_read),
    .B(_118_),
    .Y(_125_)
  );
  NOR _181_ (
    .A(read_ptr_r[0]),
    .B(_125_),
    .Y(_126_)
  );
  NOR _182_ (
    .A(_124_),
    .B(_126_),
    .Y(_127_)
  );
  NOR _183_ (
    .A(read_ptr_r[1]),
    .B(_127_),
    .Y(_128_)
  );
  NAND _184_ (
    .A(read_ptr_r[1]),
    .B(_127_),
    .Y(_129_)
  );
  NAND _185_ (
    .A(reset),
    .B(_129_),
    .Y(_130_)
  );
  NOR _186_ (
    .A(_128_),
    .B(_130_),
    .Y(_001_[1])
  );
  NOR _187_ (
    .A(_110_),
    .B(_112_),
    .Y(_131_)
  );
  NAND _188_ (
    .A(read_ptr_r[1]),
    .B(read_ptr_r[0]),
    .Y(_132_)
  );
  NAND _189_ (
    .A(fifo_read),
    .B(_131_),
    .Y(_133_)
  );
  NOR _190_ (
    .A(read_ptr_r[1]),
    .B(read_ptr_r[0]),
    .Y(_134_)
  );
  NOT _191_ (
    .A(_134_),
    .Y(_135_)
  );
  NAND _192_ (
    .A(_125_),
    .B(_134_),
    .Y(_136_)
  );
  NAND _193_ (
    .A(_133_),
    .B(_136_),
    .Y(_137_)
  );
  NAND _194_ (
    .A(read_ptr_r[2]),
    .B(_137_),
    .Y(_138_)
  );
  NOR _195_ (
    .A(read_ptr_r[2]),
    .B(_137_),
    .Y(_139_)
  );
  NAND _196_ (
    .A(reset),
    .B(_138_),
    .Y(_140_)
  );
  NOR _197_ (
    .A(_139_),
    .B(_140_),
    .Y(_001_[2])
  );
  NAND _198_ (
    .A(write_ptr_r[0]),
    .B(fifo_write),
    .Y(_141_)
  );
  NOT _199_ (
    .A(_141_),
    .Y(_142_)
  );
  NOR _200_ (
    .A(write_ptr_r[0]),
    .B(fifo_write),
    .Y(_143_)
  );
  NOT _201_ (
    .A(_143_),
    .Y(_144_)
  );
  NAND _202_ (
    .A(reset),
    .B(_144_),
    .Y(_145_)
  );
  NOR _203_ (
    .A(_142_),
    .B(_145_),
    .Y(_003_[0])
  );
  NAND _204_ (
    .A(write_ptr_r[1]),
    .B(write_ptr_r[0]),
    .Y(_146_)
  );
  NAND _205_ (
    .A(write_ptr_r[1]),
    .B(_142_),
    .Y(_147_)
  );
  NOT _206_ (
    .A(_147_),
    .Y(_148_)
  );
  NAND _207_ (
    .A(_111_),
    .B(_141_),
    .Y(_149_)
  );
  NAND _208_ (
    .A(reset),
    .B(_149_),
    .Y(_150_)
  );
  NOR _209_ (
    .A(_148_),
    .B(_150_),
    .Y(_003_[1])
  );
  NAND _210_ (
    .A(write_ptr_r[2]),
    .B(fifo_write),
    .Y(_151_)
  );
  NOR _211_ (
    .A(_146_),
    .B(_151_),
    .Y(_152_)
  );
  NAND _212_ (
    .A(_109_),
    .B(_147_),
    .Y(_153_)
  );
  NAND _213_ (
    .A(reset),
    .B(_153_),
    .Y(_154_)
  );
  NOR _214_ (
    .A(_152_),
    .B(_154_),
    .Y(_003_[2])
  );
  NAND _215_ (
    .A(_112_),
    .B(write_ptr_r[0]),
    .Y(_155_)
  );
  NAND _216_ (
    .A(read_ptr_r[0]),
    .B(_113_),
    .Y(_156_)
  );
  NOT _217_ (
    .A(_156_),
    .Y(_157_)
  );
  NOR _218_ (
    .A(_110_),
    .B(write_ptr_r[1]),
    .Y(_158_)
  );
  NAND _219_ (
    .A(read_ptr_r[1]),
    .B(_111_),
    .Y(_159_)
  );
  NOR _220_ (
    .A(read_ptr_r[1]),
    .B(_111_),
    .Y(_160_)
  );
  NAND _221_ (
    .A(_110_),
    .B(write_ptr_r[1]),
    .Y(_161_)
  );
  NOR _222_ (
    .A(_158_),
    .B(_160_),
    .Y(_004_)
  );
  NAND _223_ (
    .A(_159_),
    .B(_161_),
    .Y(_005_)
  );
  NOR _224_ (
    .A(_157_),
    .B(_005_),
    .Y(_006_)
  );
  NAND _225_ (
    .A(_156_),
    .B(_004_),
    .Y(_007_)
  );
  NAND _226_ (
    .A(read_ptr_r[2]),
    .B(_109_),
    .Y(_008_)
  );
  NAND _227_ (
    .A(_108_),
    .B(write_ptr_r[2]),
    .Y(_009_)
  );
  NAND _228_ (
    .A(_008_),
    .B(_009_),
    .Y(_010_)
  );
  NOT _229_ (
    .A(_010_),
    .Y(_011_)
  );
  NOR _230_ (
    .A(_007_),
    .B(_010_),
    .Y(_012_)
  );
  NAND _231_ (
    .A(fifo_write),
    .B(_012_),
    .Y(_013_)
  );
  NAND _232_ (
    .A(_155_),
    .B(_012_),
    .Y(_014_)
  );
  NOT _233_ (
    .A(_014_),
    .Y(_015_)
  );
  NOR _234_ (
    .A(_117_),
    .B(_014_),
    .Y(_016_)
  );
  NAND _235_ (
    .A(fifo_write),
    .B(_015_),
    .Y(_017_)
  );
  NAND _236_ (
    .A(read_ptr_r[2]),
    .B(fifo_read),
    .Y(_018_)
  );
  NOR _237_ (
    .A(_132_),
    .B(_018_),
    .Y(_019_)
  );
  NAND _238_ (
    .A(_017_),
    .B(_019_),
    .Y(_020_)
  );
  NOR _239_ (
    .A(vector[7]),
    .B(_152_),
    .Y(_021_)
  );
  NAND _240_ (
    .A(reset),
    .B(_020_),
    .Y(_022_)
  );
  NOR _241_ (
    .A(_021_),
    .B(_022_),
    .Y(_002_[7])
  );
  NAND _242_ (
    .A(_110_),
    .B(read_ptr_r[0]),
    .Y(_023_)
  );
  NOR _243_ (
    .A(_018_),
    .B(_023_),
    .Y(_024_)
  );
  NAND _244_ (
    .A(_013_),
    .B(_024_),
    .Y(_025_)
  );
  NAND _245_ (
    .A(_111_),
    .B(write_ptr_r[0]),
    .Y(_026_)
  );
  NOR _246_ (
    .A(_151_),
    .B(_026_),
    .Y(_027_)
  );
  NOR _247_ (
    .A(vector[5]),
    .B(_027_),
    .Y(_028_)
  );
  NAND _248_ (
    .A(reset),
    .B(_025_),
    .Y(_029_)
  );
  NOR _249_ (
    .A(_028_),
    .B(_029_),
    .Y(_002_[5])
  );
  NOR _250_ (
    .A(_135_),
    .B(_018_),
    .Y(_030_)
  );
  NAND _251_ (
    .A(_017_),
    .B(_030_),
    .Y(_031_)
  );
  NAND _252_ (
    .A(_111_),
    .B(_113_),
    .Y(_032_)
  );
  NOR _253_ (
    .A(_151_),
    .B(_032_),
    .Y(_033_)
  );
  NOR _254_ (
    .A(vector[4]),
    .B(_033_),
    .Y(_034_)
  );
  NAND _255_ (
    .A(reset),
    .B(_031_),
    .Y(_035_)
  );
  NOR _256_ (
    .A(_034_),
    .B(_035_),
    .Y(_002_[4])
  );
  NAND _257_ (
    .A(_108_),
    .B(fifo_read),
    .Y(_036_)
  );
  NOR _258_ (
    .A(_016_),
    .B(_036_),
    .Y(_037_)
  );
  NAND _259_ (
    .A(_131_),
    .B(_037_),
    .Y(_038_)
  );
  NAND _260_ (
    .A(_109_),
    .B(fifo_write),
    .Y(_039_)
  );
  NOR _261_ (
    .A(_146_),
    .B(_039_),
    .Y(_040_)
  );
  NOR _262_ (
    .A(vector[3]),
    .B(_040_),
    .Y(_041_)
  );
  NAND _263_ (
    .A(reset),
    .B(_038_),
    .Y(_042_)
  );
  NOR _264_ (
    .A(_041_),
    .B(_042_),
    .Y(_002_[3])
  );
  NOR _265_ (
    .A(_110_),
    .B(read_ptr_r[0]),
    .Y(_043_)
  );
  NAND _266_ (
    .A(_017_),
    .B(_043_),
    .Y(_044_)
  );
  NOR _267_ (
    .A(_036_),
    .B(_044_),
    .Y(_045_)
  );
  NAND _268_ (
    .A(write_ptr_r[1]),
    .B(_113_),
    .Y(_046_)
  );
  NOR _269_ (
    .A(_039_),
    .B(_046_),
    .Y(_047_)
  );
  NOR _270_ (
    .A(vector[2]),
    .B(_047_),
    .Y(_048_)
  );
  NOT _271_ (
    .A(_048_),
    .Y(_049_)
  );
  NAND _272_ (
    .A(reset),
    .B(_049_),
    .Y(_050_)
  );
  NOR _273_ (
    .A(_045_),
    .B(_050_),
    .Y(_002_[2])
  );
  NOR _274_ (
    .A(_023_),
    .B(_036_),
    .Y(_051_)
  );
  NAND _275_ (
    .A(_013_),
    .B(_051_),
    .Y(_052_)
  );
  NOR _276_ (
    .A(_026_),
    .B(_039_),
    .Y(_053_)
  );
  NOR _277_ (
    .A(vector[1]),
    .B(_053_),
    .Y(_054_)
  );
  NAND _278_ (
    .A(reset),
    .B(_052_),
    .Y(_055_)
  );
  NOR _279_ (
    .A(_054_),
    .B(_055_),
    .Y(_002_[1])
  );
  NAND _280_ (
    .A(_134_),
    .B(_037_),
    .Y(_056_)
  );
  NOR _281_ (
    .A(_032_),
    .B(_039_),
    .Y(_057_)
  );
  NOR _282_ (
    .A(vector[0]),
    .B(_057_),
    .Y(_058_)
  );
  NAND _283_ (
    .A(reset),
    .B(_056_),
    .Y(_059_)
  );
  NOR _284_ (
    .A(_058_),
    .B(_059_),
    .Y(_002_[0])
  );
  NOR _285_ (
    .A(_018_),
    .B(_044_),
    .Y(_060_)
  );
  NOR _286_ (
    .A(_151_),
    .B(_046_),
    .Y(_061_)
  );
  NOR _287_ (
    .A(vector[6]),
    .B(_061_),
    .Y(_062_)
  );
  NOT _288_ (
    .A(_062_),
    .Y(_063_)
  );
  NAND _289_ (
    .A(reset),
    .B(_063_),
    .Y(_064_)
  );
  NOR _290_ (
    .A(_060_),
    .B(_064_),
    .Y(_002_[6])
  );
  NAND _291_ (
    .A(vector[1]),
    .B(vector[0]),
    .Y(_065_)
  );
  NAND _292_ (
    .A(vector[7]),
    .B(vector[6]),
    .Y(_066_)
  );
  NOR _293_ (
    .A(_065_),
    .B(_066_),
    .Y(_067_)
  );
  NAND _294_ (
    .A(vector[5]),
    .B(vector[4]),
    .Y(_068_)
  );
  NAND _295_ (
    .A(vector[3]),
    .B(vector[2]),
    .Y(_069_)
  );
  NOR _296_ (
    .A(_068_),
    .B(_069_),
    .Y(_070_)
  );
  NAND _297_ (
    .A(_067_),
    .B(_070_),
    .Y(_071_)
  );
  NOT _298_ (
    .A(_071_),
    .Y(_072_)
  );
  NAND _299_ (
    .A(_116_),
    .B(fifo_write),
    .Y(_073_)
  );
  NOR _300_ (
    .A(_071_),
    .B(_073_),
    .Y(_074_)
  );
  NOR _301_ (
    .A(vector[7]),
    .B(vector[6]),
    .Y(_075_)
  );
  NAND _302_ (
    .A(fifo_read),
    .B(_075_),
    .Y(_076_)
  );
  NOR _303_ (
    .A(vector[5]),
    .B(vector[4]),
    .Y(_077_)
  );
  NOR _304_ (
    .A(vector[2]),
    .B(vector[1]),
    .Y(_078_)
  );
  NOR _305_ (
    .A(vector[3]),
    .B(vector[0]),
    .Y(_079_)
  );
  NAND _306_ (
    .A(_077_),
    .B(_079_),
    .Y(_080_)
  );
  NOR _307_ (
    .A(_076_),
    .B(_080_),
    .Y(_081_)
  );
  NAND _308_ (
    .A(_078_),
    .B(_081_),
    .Y(_082_)
  );
  NOT _309_ (
    .A(_082_),
    .Y(_083_)
  );
  NOR _310_ (
    .A(_074_),
    .B(_083_),
    .Y(_084_)
  );
  NOR _311_ (
    .A(_014_),
    .B(_084_),
    .Y(_085_)
  );
  NOR _312_ (
    .A(error_fifo_out_synt),
    .B(_085_),
    .Y(_086_)
  );
  NOR _313_ (
    .A(_119_),
    .B(_086_),
    .Y(_000_)
  );
  NAND _314_ (
    .A(reset),
    .B(_071_),
    .Y(_087_)
  );
  NOR _315_ (
    .A(_014_),
    .B(_087_),
    .Y(fifo_empty_out_synt)
  );
  NAND _316_ (
    .A(high_limit[0]),
    .B(_155_),
    .Y(_088_)
  );
  NAND _317_ (
    .A(_114_),
    .B(_088_),
    .Y(_089_)
  );
  NAND _318_ (
    .A(_006_),
    .B(_089_),
    .Y(_090_)
  );
  NAND _319_ (
    .A(_156_),
    .B(_088_),
    .Y(_091_)
  );
  NOR _320_ (
    .A(_114_),
    .B(_004_),
    .Y(_092_)
  );
  NAND _321_ (
    .A(_091_),
    .B(_092_),
    .Y(_093_)
  );
  NAND _322_ (
    .A(_090_),
    .B(_093_),
    .Y(_094_)
  );
  NOR _323_ (
    .A(high_limit[2]),
    .B(_094_),
    .Y(_095_)
  );
  NOR _324_ (
    .A(_160_),
    .B(_006_),
    .Y(_096_)
  );
  NAND _325_ (
    .A(_161_),
    .B(_007_),
    .Y(_097_)
  );
  NAND _326_ (
    .A(_010_),
    .B(_097_),
    .Y(_098_)
  );
  NAND _327_ (
    .A(_011_),
    .B(_096_),
    .Y(_099_)
  );
  NAND _328_ (
    .A(_098_),
    .B(_099_),
    .Y(_100_)
  );
  NOR _329_ (
    .A(_095_),
    .B(_100_),
    .Y(_101_)
  );
  NOR _330_ (
    .A(high_limit[0]),
    .B(high_limit[1]),
    .Y(_102_)
  );
  NOR _331_ (
    .A(high_limit[2]),
    .B(_102_),
    .Y(_103_)
  );
  NOR _332_ (
    .A(_115_),
    .B(_094_),
    .Y(_104_)
  );
  NOR _333_ (
    .A(_103_),
    .B(_104_),
    .Y(_105_)
  );
  NOR _334_ (
    .A(_101_),
    .B(_105_),
    .Y(_106_)
  );
  NOR _335_ (
    .A(_072_),
    .B(_106_),
    .Y(_107_)
  );
  NOR _336_ (
    .A(_119_),
    .B(_107_),
    .Y(fifo_full_out_synt)
  );
  (* src = "synth_xfifo.v:173" *)
  DFF _337_ (
    .C(clk),
    .D(_001_[0]),
    .Q(read_ptr_r[0])
  );
  (* src = "synth_xfifo.v:173" *)
  DFF _338_ (
    .C(clk),
    .D(_001_[1]),
    .Q(read_ptr_r[1])
  );
  (* src = "synth_xfifo.v:173" *)
  DFF _339_ (
    .C(clk),
    .D(_001_[2]),
    .Q(read_ptr_r[2])
  );
  (* src = "synth_xfifo.v:159" *)
  DFF _340_ (
    .C(clk),
    .D(_003_[0]),
    .Q(write_ptr_r[0])
  );
  (* src = "synth_xfifo.v:159" *)
  DFF _341_ (
    .C(clk),
    .D(_003_[1]),
    .Q(write_ptr_r[1])
  );
  (* src = "synth_xfifo.v:159" *)
  DFF _342_ (
    .C(clk),
    .D(_003_[2]),
    .Q(write_ptr_r[2])
  );
  (* src = "synth_xfifo.v:110" *)
  DFF _343_ (
    .C(clk),
    .D(_002_[0]),
    .Q(vector[0])
  );
  (* src = "synth_xfifo.v:110" *)
  DFF _344_ (
    .C(clk),
    .D(_002_[1]),
    .Q(vector[1])
  );
  (* src = "synth_xfifo.v:110" *)
  DFF _345_ (
    .C(clk),
    .D(_002_[2]),
    .Q(vector[2])
  );
  (* src = "synth_xfifo.v:110" *)
  DFF _346_ (
    .C(clk),
    .D(_002_[3]),
    .Q(vector[3])
  );
  (* src = "synth_xfifo.v:110" *)
  DFF _347_ (
    .C(clk),
    .D(_002_[4]),
    .Q(vector[4])
  );
  (* src = "synth_xfifo.v:110" *)
  DFF _348_ (
    .C(clk),
    .D(_002_[5]),
    .Q(vector[5])
  );
  (* src = "synth_xfifo.v:110" *)
  DFF _349_ (
    .C(clk),
    .D(_002_[6]),
    .Q(vector[6])
  );
  (* src = "synth_xfifo.v:110" *)
  DFF _350_ (
    .C(clk),
    .D(_002_[7]),
    .Q(vector[7])
  );
  (* src = "synth_xfifo.v:88" *)
  DFF _351_ (
    .C(clk),
    .D(_000_),
    .Q(error_fifo_out_synt)
  );
  (* src = "synth_xfifo.v:30" *)
  \$paramod\ram\DATA_BITS=10\ADDR_BITS=3  MEM (
    .addr_read(read_ptr_r),
    .addr_write(write_ptr_r),
    .clk(clk),
    .data_in(fifo_data_in),
    .data_out_synt(fifo_data_out_synt),
    .read(fifo_read),
    .reset(reset),
    .write(fifo_write)
  );
  assign read_ptr = read_ptr_r;
  assign write_ptr = write_ptr_r;
endmodule
